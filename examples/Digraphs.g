##  L <-l-- K --r-> R
##  |       |       |
##  |       |       |
##  m   1   n   2   p
##  |       |       |
##  v       v       V
##  G <-g-- D --h-> H

LoadPackage( "FunctorCategories" );

## Construct the category of directed graphs as the functor category from
## the (free category generated by the) graphs quiver to the category of finite sets

digraphs_quiver := RightQuiver( "q(V,E)[s:E->V,t:E->V]" );
F := FreeCategory( digraphs_quiver );
#Digraphs := Hom( F, FinSets );

## The rewriting rule
K_V := FinSet( [ 1, 2 ] );
K_E := InitialObject( FinSets );
K := AsObjectInHomCategory( F,
             rec( E := K_E, V := K_V ),
             rec( s := UniversalMorphismFromInitialObject( K_V ),
                  t := UniversalMorphismFromInitialObject( K_V ) ) );
Assert( 0, IsWellDefined( K ) );

L_V := FinSet( [ 1, 2, 4 ] );
L_E := FinSet( [ "2E1", "4E1", "4E4" ] );
L := AsObjectInHomCategory( F,
             rec( E := L_E, V := L_V ),
             rec( s := MapOfFinSets( L_E, [ [ "2E1", 2 ], [ "4E1", 4 ], [ "4E4", 4 ] ], L_V ),
                  t := MapOfFinSets( L_E, [ [ "2E1", 1 ], [ "4E1", 1 ], [ "4E4", 4 ] ], L_V ) ) );
Assert( 0, IsWellDefined( L ) );

D_V := FinSet( [ 1, 2, 3 ] );
D_E := FinSet( [ "3E1", "3E2" ] );
D := AsObjectInHomCategory( F,
             rec( E := D_E, V := D_V ),
             rec( s := MapOfFinSets( D_E, [ [ "3E1", 3 ], [ "3E2", 3 ] ], D_V ),
                  t := MapOfFinSets( D_E, [ [ "3E1", 1 ], [ "3E2", 2 ] ], D_V ) ) );
Assert( 0, IsWellDefined( D ) );

R_V := FinSet( [ 1, 2, 3 ] );
R_E := FinSet( [ "3E1", "1E2" ] );
R := AsObjectInHomCategory( F,
             rec( E := R_E, V := R_V ),
             rec( s := MapOfFinSets( R_E, [ [ "3E1", 3 ], [ "1E2", 1 ] ], R_V ),
                  t := MapOfFinSets( R_E, [ [ "3E1", 1 ], [ "1E2", 2 ] ], R_V ) ) );
Assert( 0, IsWellDefined( R ) );

l := AsMorphismInHomCategory(
             K,
             rec( E := EmbeddingOfFinSets( K_E, L_E ),
                  V := EmbeddingOfFinSets( K_V, L_V ) ),
             L );
Assert( 0, IsWellDefined( l ) );

r := AsMorphismInHomCategory(
             K,
             rec( E := EmbeddingOfFinSets( K_E, R_E ),
                  V := EmbeddingOfFinSets( K_V, R_V ) ),
             R );
Assert( 0, IsWellDefined( r ) );

n := AsMorphismInHomCategory(
             K,
             rec( E := EmbeddingOfFinSets( K_E, D_E ),
                  V := EmbeddingOfFinSets( K_V, D_V ) ),
             D );
Assert( 0, IsWellDefined( n ) );

## The matching
G_V := FinSet( [ 1 .. 4 ] );
G_E := FinSet( [ "2E1", "4E1", "4E4", "3E1", "3E2" ] );
G := AsObjectInHomCategory( F,
             rec( E := G_E, V := G_V ),
             rec( s := MapOfFinSets( G_E, [ [ "2E1", 2 ], [ "4E1", 4 ], [ "4E4", 4 ], [ "3E1", 3 ], [ "3E2", 3 ] ], G_V ),
                  t := MapOfFinSets( G_E, [ [ "2E1", 1 ], [ "4E1", 1 ], [ "4E4", 4 ], [ "3E1", 1 ], [ "3E2", 2 ] ], G_V ) ) );
Assert( 0, IsWellDefined( G ) );

m := AsMorphismInHomCategory(
             L,
             rec( E := EmbeddingOfFinSets( L_E, G_E ),
                  V := EmbeddingOfFinSets( L_V, G_V ) ),
             G );
Assert( 0, IsWellDefined( m ) );

H := Pushout( n, r );
h := InjectionOfCofactorOfPushoutWithGivenPushout( [ n, r ], 1, H );
p := InjectionOfCofactorOfPushoutWithGivenPushout( [ n, r ], 2, H );
