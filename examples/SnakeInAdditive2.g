#! @Chunk SnakeInAdditive2

LoadPackage( "LazyCategories" );

#! @Example
LoadPackage( "Bialgebroids" );
#! true
LoadPackage( "FreydCategoriesForCAP" );
#! true
SwitchGeneralizedMorphismStandard( "cospan" );
snake_quiver := RightQuiver( "q(4)[a:1->2,b:2->3,c:3->4]" );
#! q(4)[a:1->2,b:2->3,c:3->4]
Q := HomalgFieldOfRationals( );
#! Q
A := PathAlgebra( Q, snake_quiver );
#! Q * q
Aoid := Algebroid( A, [ A.abc ] );
#! Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4]
add := AdditiveClosure( Aoid );
#! Additive closure( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] )
Lazy := LazyCategory( add : show_evaluation := true );
#! LazyCategory( Additive closure( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) )
a := Aoid.a / add / Lazy; a!.Label := "a";;
#! <An evaluated morphism in LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) )>
b := Aoid.b / add / Lazy; b!.Label := "b";; Range( b )!.Label := "3";;
#! <An evaluated morphism in LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) )>
c := Aoid.c / add / Lazy; c!.Label := "c";;
#! <An evaluated morphism in LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) )>
Adelman := AdelmanCategory( Lazy );
#! Adelman category( LazyCategory( Additive closure(
#! Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )
a := a / Adelman;
#! <A morphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
b := b / Adelman;
#! <A morphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
c := c / Adelman;
#! <A morphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
d := CokernelProjection( a );
#! <An epimorphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
e := CokernelColift( a, PreCompose( b, c ) );
#! <A morphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
f := KernelEmbedding( e );
#! <A monomorphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
g := KernelEmbedding( c );
#! <A monomorphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
h := KernelLift( c, PreCompose( a, b ) );
#! <A morphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
i := CokernelProjection( h );
#! <An epimorphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
ff := AsGeneralizedMorphism( f );
#! <A morphism in Generalized morphism category of Adelman category(
#! LazyCategory( Additive closure( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
dd := AsGeneralizedMorphism( d );
#! <A morphism in Generalized morphism category of Adelman category(
#! LazyCategory( Additive closure( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
bb := AsGeneralizedMorphism( b );
#! <A morphism in Generalized morphism category of Adelman category(
#! LazyCategory( Additive closure( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
gg := AsGeneralizedMorphism( g );
#! <A morphism in Generalized morphism category of Adelman category(
#! LazyCategory( Additive closure( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
ii := AsGeneralizedMorphism( i );
#! <A morphism in Generalized morphism category of Adelman category(
#! LazyCategory( Additive closure( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
ss := PreCompose( [ ff, PseudoInverse( dd ), bb, PseudoInverse( gg ), ii ] );
#! <A morphism in Generalized morphism category of Adelman category(
#! LazyCategory( Additive closure( Algebroid generated by
#! the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) ) by cospan>
s := HonestRepresentative( ss );
#! <A morphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
j := KernelObjectFunctorial( b, d, e );
#! <A morphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
k := CokernelObjectFunctorial( h, g, b );
#! <A morphism in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
HK := HomologyObject( j, s );
#! <An object in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
HC := HomologyObject( s, k );
#! <An object in Adelman category( LazyCategory( Additive closure(
#!  Algebroid generated by the right quiver q(4)[a:1->2,b:2->3,c:3->4] ) ) )>
#! @EndExample
