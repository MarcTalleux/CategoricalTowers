#
# Bialgebroids: Bialgebroids as preadditive categories generated by enhanced quivers
#
# Declarations
#

#! @Chapter Bialgebroids as preadditive categories generated by enhanced quivers

# our info class:
DeclareInfoClass( "InfoBialgebroids" );
SetInfoLevel( InfoBialgebroids, 1 );

####################################
#
#! @Section Categories
#
####################################

#! @Description
#!  The &GAP; category of objects in a bialgebroid.
DeclareCategory( "IsCapCategoryObjectInBialgebroid",
        IsCapCategoryObject );

#! @Description
#!  The &GAP; category of morphisms in a bialgebroid.
DeclareCategory( "IsCapCategoryMorphismInBialgebroid",
        IsCapCategoryMorphism );

####################################
#
#! @Section Technical stuff
#
####################################

####################################
#
#! @Section Attributes
#
####################################

#! @Description
#!  
#! @Arguments bialgebra
#! @Returns a &QPA; quiver
DeclareAttribute( "UnderlyingQuiver",
        IsCapCategory );

#! @Description
#!  
#! @Arguments bialgebra
#! @Returns a &QPA; path algebra
DeclareAttribute( "UnderlyingPathAlgebra",
        IsCapCategory );

#! @Description
#!  The vertex of the quiver underlying the object <A>obj</A> in a bialgebroid.
#! @Arguments obj
#! @Returns a vertex in a &QPA; quiver
DeclareAttribute( "UnderlyingVertex",
        IsCapCategoryObjectInBialgebroid );

#! @Description
#!  The path algebra element underlying the morphism <A>mor</A> in a bialgebroid.
#! @Arguments mor
#! @Returns an element in a &QPA; path algebra
DeclareAttribute( "UnderlyingPathAlgebraElement",
        IsCapCategoryMorphismInBialgebroid );

####################################
#
#! @Section Constructors
#
####################################

DeclareGlobalFunction( "ADD_FUNCTIONS_FOR_ALGEBROID" );

DeclareGlobalFunction( "ADD_FUNCTIONS_FOR_BIALGEBROID" );

DeclareOperation( "Algebroid_NonFinalized",
        [ IsHomalgRing, IsQuiver ] );

#! @Description
#!  Construct the algebroid generated by the quiver <A>q</A> as an <A>R</A>-linear category.
#! @Arguments R, q
#! @Returns a &CAP; category
DeclareOperation( "Algebroid",
        [ IsHomalgRing, IsQuiver ] );

#! @Description
#!  Construct the bialgebroid generated by the quiver <A>q</A> as an <A>R</A>-linear category.
#! @Arguments R, q
#! @Returns a &CAP; category
DeclareOperation( "Bialgebroid",
        [ IsHomalgRing, IsQuiver ] );

#! @Description
#!  The constructor of morphisms in a bialgebroid given the source <A>S</A>, the target <A>T</A>,
#!  and the underlying path algebra element <A>path</A>.
#! @Arguments S, path, T
#! @Returns a morphism in a &CAP; category
DeclareOperation( "MorphismInBialgebroid",
        [ IsCapCategoryObjectInBialgebroid, IsPathAlgebraElement, IsCapCategoryObjectInBialgebroid ] );
