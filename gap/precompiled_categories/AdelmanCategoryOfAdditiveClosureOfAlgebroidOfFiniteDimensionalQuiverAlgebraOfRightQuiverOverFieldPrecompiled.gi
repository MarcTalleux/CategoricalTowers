# SPDX-License-Identifier: GPL-2.0-or-later
# Algebroids: Algebroids and bialgebroids as preadditive categories generated by enhanced quivers
#
# Implementations
#
BindGlobal( "ADD_FUNCTIONS_FOR_AdelmanCategoryOfAdditiveClosureOfAlgebroidOfFiniteDimensionalQuiverAlgebraOfRightQuiverOverFieldPrecompiled", function ( cat )
    
    ##
    AddIsZeroForMorphisms( cat,
        
########
function ( cat_1, arg2_1 )
    local hoisted_1_1, hoisted_2_1, hoisted_3_1, hoisted_4_1, hoisted_5_1, hoisted_6_1, hoisted_7_1, hoisted_8_1, hoisted_9_1, hoisted_10_1, hoisted_11_1, hoisted_12_1, hoisted_13_1, hoisted_14_1, hoisted_15_1, hoisted_16_1, hoisted_17_1, hoisted_18_1, hoisted_19_1, hoisted_20_1, hoisted_21_1, hoisted_22_1, hoisted_23_1, hoisted_24_1, hoisted_25_1, hoisted_26_1, hoisted_27_1, hoisted_28_1, hoisted_29_1, hoisted_30_1, hoisted_31_1, hoisted_32_1, hoisted_33_1, hoisted_34_1, hoisted_35_1, hoisted_36_1, hoisted_37_1, hoisted_38_1, hoisted_39_1, hoisted_40_1, hoisted_41_1, hoisted_42_1, hoisted_43_1, hoisted_44_1, hoisted_45_1, hoisted_46_1, hoisted_47_1, deduped_48_1, deduped_49_1, deduped_50_1, deduped_51_1, deduped_52_1, deduped_53_1, deduped_54_1, deduped_55_1, deduped_56_1, deduped_57_1, deduped_58_1, deduped_59_1, deduped_60_1, deduped_61_1, deduped_62_1, deduped_63_1, deduped_64_1, deduped_65_1, deduped_66_1, deduped_67_1, deduped_68_1, deduped_69_1, deduped_70_1;
    deduped_70_1 := UnderlyingMorphism( arg2_1 );
    deduped_69_1 := UnderlyingCategory( UnderlyingCategory( cat_1 ) );
    deduped_68_1 := MorphismMatrix( deduped_70_1 );
    deduped_67_1 := RelationMorphism( Range( arg2_1 ) );
    deduped_66_1 := CorelationMorphism( Source( arg2_1 ) );
    deduped_65_1 := UnderlyingRing( RangeCategoryOfHomomorphismStructure( cat_1 ) );
    deduped_64_1 := MorphismMatrix( deduped_66_1 );
    deduped_63_1 := MorphismMatrix( deduped_67_1 );
    deduped_62_1 := UnderlyingQuiverAlgebra( deduped_69_1 );
    deduped_61_1 := BasisPathsByVertexIndex( deduped_69_1 );
    deduped_60_1 := ObjectList( Range( deduped_70_1 ) );
    deduped_59_1 := ObjectList( Source( deduped_70_1 ) );
    deduped_58_1 := ObjectList( Source( deduped_66_1 ) );
    deduped_57_1 := ZeroImmutable( deduped_62_1 );
    deduped_56_1 := ObjectList( Range( deduped_67_1 ) );
    deduped_55_1 := ObjectList( Source( deduped_67_1 ) );
    deduped_54_1 := ObjectList( Range( deduped_66_1 ) );
    deduped_53_1 := [ 1 .. Length( deduped_60_1 ) ];
    deduped_52_1 := [ 1 .. Length( deduped_59_1 ) ];
    deduped_51_1 := [ 1 .. Length( deduped_58_1 ) ];
    deduped_50_1 := [ 1 .. Length( deduped_55_1 ) ];
    deduped_49_1 := [ 1 .. Length( deduped_54_1 ) ];
    hoisted_10_1 := deduped_56_1;
    hoisted_4_1 := List( deduped_61_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Length );
        end );
    deduped_48_1 := Sum( Concatenation( List( deduped_59_1, function ( logic_new_func_x_2 )
                local hoisted_1_2;
                hoisted_1_2 := hoisted_4_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                return List( hoisted_10_1, function ( logic_new_func_x_3 )
                        return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                    end );
            end ) ) );
    hoisted_47_1 := deduped_55_1;
    hoisted_46_1 := deduped_51_1;
    hoisted_38_1 := List( deduped_60_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_16_1 := deduped_62_1;
    hoisted_8_1 := deduped_53_1;
    hoisted_45_1 := List( deduped_53_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := PathAsAlgebraElement( hoisted_16_1, hoisted_38_1[logic_new_func_x_2] );
            return List( hoisted_8_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return deduped_57_1;
                    fi;
                    return;
                end );
        end );
    hoisted_44_1 := List( deduped_64_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_32_1 := List( deduped_60_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_43_1 := List( deduped_53_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_32_1[logic_new_func_x_2];
            return List( hoisted_8_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return hoisted_32_1[logic_new_func_x_3];
                    fi;
                    return;
                end );
        end );
    hoisted_42_1 := List( deduped_53_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_32_1[logic_new_func_x_2];
            return List( hoisted_8_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_41_1 := List( deduped_64_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_40_1 := List( deduped_64_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_39_1 := List( deduped_53_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := IsZero( PathAsAlgebraElement( hoisted_16_1, hoisted_38_1[logic_new_func_x_2] ) );
            return List( hoisted_8_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return true;
                    fi;
                    return;
                end );
        end );
    hoisted_35_1 := List( deduped_58_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_36_1 := List( deduped_51_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_4_1[hoisted_35_1[logic_new_func_x_2]];
            return List( hoisted_8_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_32_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_37_1 := List( deduped_51_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_36_1[logic_new_func_x_2];
            return Sum( List( hoisted_8_1, function ( logic_new_func_x_3 )
                      return hoisted_1_2[logic_new_func_x_3];
                  end ) );
        end );
    hoisted_34_1 := List( deduped_64_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    hoisted_31_1 := List( deduped_54_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_33_1 := List( deduped_49_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_4_1[hoisted_31_1[logic_new_func_x_2]];
            return List( hoisted_8_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_32_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_30_1 := HomStructureOnBasisPaths( deduped_69_1 );
    hoisted_29_1 := List( deduped_63_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_17_1 := deduped_52_1;
    hoisted_15_1 := List( deduped_59_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_28_1 := List( deduped_52_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := PathAsAlgebraElement( hoisted_16_1, hoisted_15_1[logic_new_func_x_2] );
            return List( hoisted_17_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return deduped_57_1;
                    fi;
                    return;
                end );
        end );
    hoisted_27_1 := List( deduped_63_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_26_1 := List( deduped_63_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_11_1 := List( deduped_59_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_25_1 := List( deduped_52_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_11_1[logic_new_func_x_2];
            return List( hoisted_17_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return hoisted_11_1[logic_new_func_x_3];
                    fi;
                    return;
                end );
        end );
    hoisted_24_1 := List( deduped_52_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_11_1[logic_new_func_x_2];
            return List( hoisted_17_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_23_1 := List( deduped_63_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    hoisted_20_1 := [ 1 .. Length( deduped_56_1 ) ];
    hoisted_19_1 := List( deduped_56_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_21_1 := List( deduped_52_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_4_1[hoisted_11_1[logic_new_func_x_2]];
            return List( hoisted_20_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_19_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_22_1 := List( deduped_52_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_21_1[logic_new_func_x_2];
            return Sum( List( hoisted_20_1, function ( logic_new_func_x_3 )
                      return hoisted_1_2[logic_new_func_x_3];
                  end ) );
        end );
    hoisted_18_1 := List( deduped_52_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := IsZero( PathAsAlgebraElement( hoisted_16_1, hoisted_15_1[logic_new_func_x_2] ) );
            return List( hoisted_17_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return true;
                    fi;
                    return;
                end );
        end );
    hoisted_13_1 := deduped_50_1;
    hoisted_12_1 := List( deduped_55_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_14_1 := List( deduped_52_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_4_1[hoisted_11_1[logic_new_func_x_2]];
            return List( hoisted_13_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_12_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_9_1 := deduped_60_1;
    hoisted_7_1 := List( deduped_68_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_6_1 := deduped_61_1;
    hoisted_5_1 := List( deduped_68_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_3_1 := List( deduped_68_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_2_1 := ListWithKeys( deduped_53_1, function ( key_2, logic_new_func_x_2 )
            local hoisted_1_2, hoisted_2_2, hoisted_3_2;
            hoisted_3_2 := hoisted_45_1[logic_new_func_x_2];
            hoisted_2_2 := hoisted_43_1[logic_new_func_x_2];
            hoisted_1_2 := hoisted_42_1[logic_new_func_x_2];
            return ListWithKeys( hoisted_8_1, function ( key_3, logic_new_func_x_3 )
                    return CoefficientsOfPaths( hoisted_6_1[hoisted_1_2[logic_new_func_x_3]][hoisted_2_2[logic_new_func_x_3]], hoisted_3_2[logic_new_func_x_3] );
                end );
        end );
    hoisted_1_1 := ListWithKeys( deduped_50_1, function ( key_2, logic_new_func_x_2 )
            local hoisted_1_2, hoisted_2_2, hoisted_3_2;
            hoisted_3_2 := hoisted_29_1[logic_new_func_x_2];
            hoisted_2_2 := hoisted_27_1[logic_new_func_x_2];
            hoisted_1_2 := hoisted_26_1[logic_new_func_x_2];
            return ListWithKeys( hoisted_20_1, function ( key_3, logic_new_func_x_3 )
                    return CoefficientsOfPaths( hoisted_6_1[hoisted_1_2[logic_new_func_x_3]][hoisted_2_2[logic_new_func_x_3]], hoisted_3_2[logic_new_func_x_3] );
                end );
        end );
    return IsZero( DecideZeroRows( HomalgMatrixListList( UnionOfColumnsListList( 1, List( deduped_52_1, function ( logic_new_func_x_2 )
                    local hoisted_1_2, hoisted_2_2, hoisted_3_2;
                    hoisted_3_2 := hoisted_7_1[logic_new_func_x_2];
                    hoisted_2_2 := hoisted_5_1[logic_new_func_x_2];
                    hoisted_1_2 := hoisted_3_1[logic_new_func_x_2];
                    return UnionOfColumnsListList( 1, List( hoisted_8_1, function ( logic_new_func_x_3 )
                              local deduped_1_3, deduped_2_3, deduped_3_3;
                              deduped_3_3 := hoisted_2_2[logic_new_func_x_3];
                              deduped_2_3 := hoisted_1_2[logic_new_func_x_3];
                              deduped_1_3 := hoisted_4_1[deduped_2_3][deduped_3_3];
                              if deduped_1_3 = 0 then
                                  return NullMatImmutable( 1, deduped_1_3 );
                              else
                                  return [ CoefficientsOfPaths( hoisted_6_1[deduped_2_3][deduped_3_3], hoisted_3_2[logic_new_func_x_3] ) ];
                              fi;
                              return;
                          end ) );
                end ) ), 1, Sum( Concatenation( List( deduped_59_1, function ( logic_new_func_x_2 )
                      local hoisted_1_2;
                      hoisted_1_2 := hoisted_4_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                      return List( hoisted_9_1, function ( logic_new_func_x_3 )
                              return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                          end );
                  end ) ) ), deduped_65_1 ), HomalgMatrixListList( UnionOfRowsListList( deduped_48_1, Concatenation( List( deduped_52_1, function ( logic_new_func_x_2 )
                      local hoisted_1_2, hoisted_2_2;
                      hoisted_1_2 := hoisted_14_1[logic_new_func_x_2];
                      hoisted_2_2 := Sum( hoisted_13_1, function ( logic_new_func_x_3 )
                              return hoisted_1_2[logic_new_func_x_3];
                          end );
                      return UnionOfColumnsListList( Sum( List( hoisted_13_1, function ( logic_new_func_x_3 )
                                  return hoisted_1_2[logic_new_func_x_3];
                              end ) ), List( hoisted_17_1, function ( logic_new_func_x_3 )
                                local hoisted_1_3, hoisted_2_3, hoisted_3_3, hoisted_4_3, hoisted_5_3, hoisted_6_3, deduped_7_3, deduped_8_3, deduped_9_3;
                                deduped_9_3 := hoisted_22_1[logic_new_func_x_3];
                                if hoisted_18_1[logic_new_func_x_3][logic_new_func_x_2] then
                                    return NullMatImmutable( hoisted_2_2, deduped_9_3 );
                                else
                                    deduped_8_3 := hoisted_25_1[logic_new_func_x_3][logic_new_func_x_2];
                                    deduped_7_3 := hoisted_24_1[logic_new_func_x_3][logic_new_func_x_2];
                                    hoisted_6_3 := [ 1 .. hoisted_4_1[deduped_7_3][deduped_8_3] ];
                                    hoisted_5_3 := deduped_7_3;
                                    hoisted_4_3 := hoisted_30_1[deduped_8_3];
                                    hoisted_2_3 := hoisted_21_1[logic_new_func_x_3];
                                    hoisted_3_3 := Sum( hoisted_20_1, function ( logic_new_func_x_4 )
                                            return hoisted_2_3[logic_new_func_x_4];
                                        end );
                                    hoisted_1_3 := CoefficientsOfPaths( hoisted_6_1[deduped_7_3][deduped_8_3], hoisted_28_1[logic_new_func_x_3][logic_new_func_x_2] );
                                    return UnionOfRowsListList( deduped_9_3, ListWithKeys( hoisted_13_1, function ( key_4, logic_new_func_x_4 )
                                              local hoisted_1_4, hoisted_2_4, hoisted_3_4, hoisted_4_4, hoisted_5_4, deduped_6_4;
                                              deduped_6_4 := hoisted_1_2[logic_new_func_x_4];
                                              if deduped_6_4 = 0 then
                                                  return NullMatImmutable( deduped_6_4, hoisted_3_3 );
                                              else
                                                  hoisted_5_4 := hoisted_1_1[key_4];
                                                  hoisted_4_4 := hoisted_27_1[logic_new_func_x_4];
                                                  hoisted_3_4 := hoisted_26_1[logic_new_func_x_4];
                                                  hoisted_2_4 := deduped_6_4;
                                                  hoisted_1_4 := hoisted_23_1[logic_new_func_x_4];
                                                  return UnionOfColumnsListList( deduped_6_4, ListWithKeys( hoisted_20_1, function ( key_5, logic_new_func_x_5 )
                                                            local hoisted_1_5, hoisted_2_5, hoisted_3_5, deduped_4_5, deduped_5_5, deduped_6_5;
                                                            deduped_4_5 := hoisted_2_3[logic_new_func_x_5];
                                                            if hoisted_1_4[logic_new_func_x_5] or deduped_4_5 = 0 then
                                                                return NullMatImmutable( hoisted_2_4, deduped_4_5 );
                                                            else
                                                                deduped_6_5 := hoisted_4_4[logic_new_func_x_5];
                                                                deduped_5_5 := hoisted_3_4[logic_new_func_x_5];
                                                                hoisted_3_5 := [ 1 .. hoisted_4_1[deduped_5_5][deduped_6_5] ];
                                                                hoisted_2_5 := hoisted_4_3[deduped_5_5][hoisted_5_3][deduped_6_5];
                                                                hoisted_1_5 := hoisted_5_4[key_5];
                                                                return Sum( hoisted_6_3, function ( p_6 )
                                                                        local hoisted_1_6, hoisted_2_6;
                                                                        hoisted_2_6 := hoisted_2_5[p_6];
                                                                        hoisted_1_6 := hoisted_1_3[p_6];
                                                                        return Sum( hoisted_3_5, function ( q_7 )
                                                                                return hoisted_1_6 * hoisted_1_5[q_7] * hoisted_2_6[q_7];
                                                                            end );
                                                                    end );
                                                            fi;
                                                            return;
                                                        end ) );
                                              fi;
                                              return;
                                          end ) );
                                fi;
                                return;
                            end ) );
                  end ), List( deduped_49_1, function ( logic_new_func_x_2 )
                      local hoisted_1_2, hoisted_2_2;
                      hoisted_1_2 := hoisted_33_1[logic_new_func_x_2];
                      hoisted_2_2 := Sum( hoisted_8_1, function ( logic_new_func_x_3 )
                              return hoisted_1_2[logic_new_func_x_3];
                          end );
                      return UnionOfColumnsListList( Sum( List( hoisted_8_1, function ( logic_new_func_x_3 )
                                  return hoisted_1_2[logic_new_func_x_3];
                              end ) ), List( hoisted_46_1, function ( logic_new_func_x_3 )
                                local hoisted_1_3, hoisted_2_3, hoisted_3_3, hoisted_4_3, hoisted_5_3, hoisted_6_3, deduped_7_3, deduped_8_3, deduped_9_3;
                                deduped_9_3 := hoisted_37_1[logic_new_func_x_3];
                                if hoisted_34_1[logic_new_func_x_3][logic_new_func_x_2] then
                                    return NullMatImmutable( hoisted_2_2, deduped_9_3 );
                                else
                                    deduped_8_3 := hoisted_41_1[logic_new_func_x_3][logic_new_func_x_2];
                                    deduped_7_3 := hoisted_40_1[logic_new_func_x_3][logic_new_func_x_2];
                                    hoisted_6_3 := [ 1 .. hoisted_4_1[deduped_7_3][deduped_8_3] ];
                                    hoisted_5_3 := deduped_7_3;
                                    hoisted_4_3 := hoisted_30_1[deduped_8_3];
                                    hoisted_2_3 := hoisted_36_1[logic_new_func_x_3];
                                    hoisted_3_3 := Sum( hoisted_8_1, function ( logic_new_func_x_4 )
                                            return hoisted_2_3[logic_new_func_x_4];
                                        end );
                                    hoisted_1_3 := CoefficientsOfPaths( hoisted_6_1[deduped_7_3][deduped_8_3], hoisted_44_1[logic_new_func_x_3][logic_new_func_x_2] );
                                    return UnionOfRowsListList( deduped_9_3, ListWithKeys( hoisted_8_1, function ( key_4, logic_new_func_x_4 )
                                              local hoisted_1_4, hoisted_2_4, hoisted_3_4, hoisted_4_4, hoisted_5_4, deduped_6_4;
                                              deduped_6_4 := hoisted_1_2[logic_new_func_x_4];
                                              if deduped_6_4 = 0 then
                                                  return NullMatImmutable( deduped_6_4, hoisted_3_3 );
                                              else
                                                  hoisted_5_4 := hoisted_2_1[key_4];
                                                  hoisted_4_4 := hoisted_43_1[logic_new_func_x_4];
                                                  hoisted_3_4 := hoisted_42_1[logic_new_func_x_4];
                                                  hoisted_2_4 := deduped_6_4;
                                                  hoisted_1_4 := hoisted_39_1[logic_new_func_x_4];
                                                  return UnionOfColumnsListList( deduped_6_4, ListWithKeys( hoisted_8_1, function ( key_5, logic_new_func_x_5 )
                                                            local hoisted_1_5, hoisted_2_5, hoisted_3_5, deduped_4_5, deduped_5_5, deduped_6_5;
                                                            deduped_4_5 := hoisted_2_3[logic_new_func_x_5];
                                                            if hoisted_1_4[logic_new_func_x_5] or deduped_4_5 = 0 then
                                                                return NullMatImmutable( hoisted_2_4, deduped_4_5 );
                                                            else
                                                                deduped_6_5 := hoisted_4_4[logic_new_func_x_5];
                                                                deduped_5_5 := hoisted_3_4[logic_new_func_x_5];
                                                                hoisted_3_5 := [ 1 .. hoisted_4_1[deduped_5_5][deduped_6_5] ];
                                                                hoisted_2_5 := hoisted_4_3[deduped_5_5][hoisted_5_3][deduped_6_5];
                                                                hoisted_1_5 := hoisted_5_4[key_5];
                                                                return Sum( hoisted_6_3, function ( p_6 )
                                                                        local hoisted_1_6, hoisted_2_6;
                                                                        hoisted_2_6 := hoisted_2_5[p_6];
                                                                        hoisted_1_6 := hoisted_1_3[p_6];
                                                                        return Sum( hoisted_3_5, function ( q_7 )
                                                                                return hoisted_1_6 * hoisted_1_5[q_7] * hoisted_2_6[q_7];
                                                                            end );
                                                                    end );
                                                            fi;
                                                            return;
                                                        end ) );
                                              fi;
                                              return;
                                          end ) );
                                fi;
                                return;
                            end ) );
                  end ) ) ), Sum( [ Sum( Concatenation( List( deduped_59_1, function ( logic_new_func_x_2 )
                            local hoisted_1_2;
                            hoisted_1_2 := hoisted_4_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                            return List( hoisted_47_1, function ( logic_new_func_x_3 )
                                    return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                end );
                        end ) ) ), Sum( Concatenation( List( deduped_54_1, function ( logic_new_func_x_2 )
                            local hoisted_1_2;
                            hoisted_1_2 := hoisted_4_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                            return List( hoisted_9_1, function ( logic_new_func_x_3 )
                                    return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                end );
                        end ) ) ) ] ), deduped_48_1, deduped_65_1 ) ) );
end
########
        
    , 100 );
    
    ##
    AddCokernelProjection( cat,
        
########
function ( cat_1, alpha_1 )
    local hoisted_1_1, hoisted_2_1, hoisted_3_1, hoisted_4_1, hoisted_5_1, hoisted_6_1, hoisted_7_1, hoisted_8_1, hoisted_9_1, hoisted_10_1, hoisted_11_1, hoisted_12_1, hoisted_13_1, hoisted_14_1, hoisted_15_1, hoisted_16_1, hoisted_17_1, hoisted_18_1, hoisted_19_1, hoisted_20_1, hoisted_21_1, deduped_22_1, deduped_23_1, deduped_24_1, deduped_25_1, deduped_26_1, deduped_27_1, deduped_28_1, deduped_29_1, deduped_30_1, deduped_31_1, deduped_32_1, deduped_33_1, deduped_34_1, deduped_35_1, deduped_36_1, deduped_37_1, deduped_38_1, deduped_39_1, deduped_40_1, deduped_41_1, deduped_42_1, deduped_43_1, deduped_44_1, deduped_45_1, deduped_46_1, deduped_47_1, deduped_48_1;
    deduped_48_1 := UnderlyingCategory( cat_1 );
    deduped_47_1 := Range( alpha_1 );
    deduped_46_1 := UnderlyingCategory( deduped_48_1 );
    deduped_45_1 := CorelationMorphism( deduped_47_1 );
    deduped_44_1 := CorelationMorphism( Source( alpha_1 ) );
    deduped_43_1 := RelationMorphism( deduped_47_1 );
    deduped_42_1 := UnderlyingQuiverAlgebra( deduped_46_1 );
    deduped_41_1 := Range( deduped_43_1 );
    deduped_40_1 := ZeroImmutable( deduped_42_1 );
    deduped_39_1 := ObjectList( Range( deduped_45_1 ) );
    deduped_38_1 := ObjectList( Source( deduped_45_1 ) );
    deduped_37_1 := ObjectList( Range( deduped_44_1 ) );
    deduped_36_1 := ObjectList( deduped_41_1 );
    deduped_35_1 := ObjectList( Source( deduped_44_1 ) );
    deduped_34_1 := ObjectList( Source( deduped_43_1 ) );
    deduped_33_1 := Length( deduped_38_1 );
    deduped_32_1 := Concatenation( deduped_38_1, deduped_37_1 );
    deduped_31_1 := Length( deduped_34_1 );
    deduped_30_1 := Length( deduped_37_1 );
    deduped_29_1 := Length( deduped_36_1 );
    deduped_28_1 := [ 1 .. deduped_33_1 ];
    deduped_27_1 := [ 1 .. deduped_30_1 ];
    deduped_26_1 := [ 1 .. deduped_29_1 ];
    deduped_25_1 := CreateCapCategoryObjectWithAttributes( deduped_48_1, ObjectList, Concatenation( deduped_36_1, deduped_37_1 ) );
    deduped_24_1 := Sum( [ deduped_33_1, deduped_30_1 ] );
    deduped_23_1 := [ 1 .. deduped_24_1 ];
    hoisted_16_1 := List( deduped_37_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_9_1 := deduped_42_1;
    hoisted_5_1 := deduped_27_1;
    deduped_22_1 := List( deduped_27_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := PathAsAlgebraElement( hoisted_9_1, hoisted_16_1[logic_new_func_x_2] );
            return List( hoisted_5_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return deduped_40_1;
                    fi;
                    return;
                end );
        end );
    hoisted_21_1 := deduped_26_1;
    hoisted_20_1 := List( deduped_36_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_19_1 := deduped_36_1;
    hoisted_18_1 := deduped_22_1;
    hoisted_4_1 := deduped_40_1;
    hoisted_15_1 := List( deduped_27_1, function ( logic_new_func_x_2 )
            return hoisted_4_1;
        end );
    hoisted_17_1 := UnionOfRowsListList( deduped_30_1, [ List( deduped_28_1, function ( logic_new_func_x_2 )
                  return hoisted_15_1;
              end ), deduped_22_1 ] );
    hoisted_14_1 := [ 1 .. Length( deduped_39_1 ) ];
    hoisted_13_1 := List( MorphismMatrix( deduped_45_1 ), function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_11_1 := List( deduped_28_1, function ( logic_new_func_x_2 )
            return hoisted_4_1;
        end );
    hoisted_10_1 := deduped_28_1;
    hoisted_8_1 := List( deduped_38_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_12_1 := UnionOfRowsListList( deduped_33_1, [ List( deduped_28_1, function ( logic_new_func_x_2 )
                  local hoisted_1_2;
                  hoisted_1_2 := PathAsAlgebraElement( hoisted_9_1, hoisted_8_1[logic_new_func_x_2] );
                  return List( hoisted_10_1, function ( logic_new_func_x_3 )
                          if logic_new_func_x_2 = logic_new_func_x_3 then
                              return hoisted_1_2;
                          else
                              return deduped_40_1;
                          fi;
                          return;
                      end );
              end ), List( deduped_27_1, function ( logic_new_func_x_2 )
                  return hoisted_11_1;
              end ) ] );
    hoisted_7_1 := deduped_39_1;
    hoisted_6_1 := deduped_32_1;
    hoisted_3_1 := deduped_46_1;
    hoisted_2_1 := deduped_37_1;
    hoisted_1_1 := deduped_34_1;
    return CreateCapCategoryMorphismWithAttributes( cat_1, deduped_47_1, CreateCapCategoryObjectWithAttributes( cat_1, RelationMorphism, CreateCapCategoryMorphismWithAttributes( deduped_48_1, CreateCapCategoryObjectWithAttributes( deduped_48_1, ObjectList, Concatenation( deduped_34_1, deduped_35_1 ) ), deduped_25_1, MorphismMatrix, UnionOfRowsListList( Sum( [ deduped_29_1, deduped_30_1 ] ), [ UnionOfColumnsListList( deduped_31_1, [ MorphismMatrix( deduped_43_1 ), List( [ 1 .. deduped_31_1 ], function ( i_2 )
                              local hoisted_1_2;
                              hoisted_1_2 := hoisted_1_1[i_2];
                              return List( hoisted_5_1, function ( j_3 )
                                      return CreateCapCategoryMorphismWithAttributes( hoisted_3_1, hoisted_1_2, hoisted_2_1[j_3], UnderlyingQuiverAlgebraElement, hoisted_4_1 );
                                  end );
                          end ) ] ), UnionOfColumnsListList( Length( deduped_35_1 ), [ MorphismMatrix( UnderlyingMorphism( alpha_1 ) ), MorphismMatrix( deduped_44_1 ) ] ) ] ) ), CorelationMorphism, CreateCapCategoryMorphismWithAttributes( deduped_48_1, CreateCapCategoryObjectWithAttributes( deduped_48_1, ObjectList, deduped_32_1 ), CreateCapCategoryObjectWithAttributes( deduped_48_1, ObjectList, Concatenation( deduped_39_1, deduped_37_1 ) ), MorphismMatrix, UnionOfColumnsListList( deduped_24_1, [ List( deduped_23_1, function ( i_2 )
                        local hoisted_1_2, hoisted_2_2;
                        hoisted_2_2 := hoisted_6_1[i_2];
                        hoisted_1_2 := hoisted_12_1[i_2];
                        return List( hoisted_14_1, function ( j_3 )
                                return CreateCapCategoryMorphismWithAttributes( hoisted_3_1, hoisted_2_2, hoisted_7_1[j_3], UnderlyingQuiverAlgebraElement, Iterated( List( hoisted_10_1, function ( logic_new_func_x_4 )
                                            return hoisted_1_2[logic_new_func_x_4] * hoisted_13_1[logic_new_func_x_4][j_3];
                                        end ), function ( alpha_4, beta_4 )
                                          return alpha_4 + beta_4;
                                      end, hoisted_4_1 ) );
                            end );
                    end ), List( deduped_23_1, function ( i_2 )
                        local hoisted_1_2, hoisted_2_2;
                        hoisted_2_2 := hoisted_6_1[i_2];
                        hoisted_1_2 := hoisted_17_1[i_2];
                        return List( hoisted_5_1, function ( j_3 )
                                return CreateCapCategoryMorphismWithAttributes( hoisted_3_1, hoisted_2_2, hoisted_2_1[j_3], UnderlyingQuiverAlgebraElement, Iterated( List( hoisted_5_1, function ( logic_new_func_x_4 )
                                            return hoisted_1_2[logic_new_func_x_4] * hoisted_18_1[logic_new_func_x_4][j_3];
                                        end ), function ( alpha_4, beta_4 )
                                          return alpha_4 + beta_4;
                                      end, hoisted_4_1 ) );
                            end );
                    end ) ] ) ) ), UnderlyingMorphism, CreateCapCategoryMorphismWithAttributes( deduped_48_1, deduped_41_1, deduped_25_1, MorphismMatrix, UnionOfColumnsListList( deduped_29_1, [ List( deduped_26_1, function ( i_2 )
                      local hoisted_1_2, hoisted_2_2, deduped_3_2;
                      deduped_3_2 := hoisted_19_1[i_2];
                      hoisted_2_2 := deduped_3_2;
                      hoisted_1_2 := CreateCapCategoryMorphismWithAttributes( hoisted_3_1, deduped_3_2, deduped_3_2, UnderlyingQuiverAlgebraElement, PathAsAlgebraElement( hoisted_9_1, hoisted_20_1[i_2] ) );
                      return List( hoisted_21_1, function ( j_3 )
                              if i_2 = j_3 then
                                  return hoisted_1_2;
                              else
                                  return CreateCapCategoryMorphismWithAttributes( hoisted_3_1, hoisted_2_2, hoisted_19_1[j_3], UnderlyingQuiverAlgebraElement, hoisted_4_1 );
                              fi;
                              return;
                          end );
                  end ), List( deduped_26_1, function ( i_2 )
                      local hoisted_1_2;
                      hoisted_1_2 := hoisted_19_1[i_2];
                      return List( hoisted_5_1, function ( j_3 )
                              return CreateCapCategoryMorphismWithAttributes( hoisted_3_1, hoisted_1_2, hoisted_2_1[j_3], UnderlyingQuiverAlgebraElement, hoisted_4_1 );
                          end );
                  end ) ] ) ) );
end
########
        
    , 100 );
    
    ##
    AddIsDominating( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    local hoisted_1_1, hoisted_2_1, hoisted_3_1, hoisted_4_1, hoisted_5_1, hoisted_6_1, hoisted_7_1, hoisted_8_1, hoisted_9_1, hoisted_10_1, hoisted_11_1, hoisted_12_1, hoisted_13_1, hoisted_14_1, hoisted_15_1, hoisted_16_1, hoisted_17_1, hoisted_18_1, hoisted_19_1, hoisted_20_1, hoisted_21_1, hoisted_22_1, hoisted_23_1, hoisted_24_1, hoisted_25_1, hoisted_26_1, hoisted_27_1, hoisted_28_1, hoisted_29_1, hoisted_30_1, hoisted_31_1, hoisted_32_1, hoisted_33_1, hoisted_34_1, hoisted_35_1, hoisted_36_1, hoisted_37_1, hoisted_38_1, hoisted_39_1, hoisted_40_1, hoisted_41_1, hoisted_42_1, hoisted_43_1, hoisted_44_1, hoisted_45_1, hoisted_46_1, hoisted_47_1, hoisted_48_1, hoisted_49_1, hoisted_50_1, hoisted_51_1, hoisted_52_1, hoisted_53_1, hoisted_54_1, hoisted_55_1, hoisted_56_1, hoisted_57_1, hoisted_58_1, hoisted_59_1, deduped_60_1, deduped_61_1, deduped_62_1, deduped_63_1, deduped_64_1, deduped_65_1, deduped_66_1, deduped_67_1, deduped_68_1, deduped_69_1, deduped_70_1, deduped_71_1, deduped_72_1, deduped_73_1, deduped_74_1, deduped_75_1, deduped_76_1, deduped_77_1, deduped_78_1, deduped_79_1, deduped_80_1, deduped_81_1, deduped_82_1, deduped_83_1, deduped_84_1, deduped_85_1, deduped_86_1, deduped_87_1, deduped_88_1, deduped_89_1, deduped_90_1, deduped_91_1, deduped_92_1, deduped_93_1, deduped_94_1, deduped_95_1, deduped_96_1;
    deduped_96_1 := UnderlyingMorphism( arg2_1 );
    deduped_95_1 := MorphismMatrix( UnderlyingMorphism( arg3_1 ) );
    deduped_94_1 := UnderlyingCategory( UnderlyingCategory( cat_1 ) );
    deduped_93_1 := CorelationMorphism( Source( arg3_1 ) );
    deduped_92_1 := RelationMorphism( Range( arg3_1 ) );
    deduped_91_1 := CorelationMorphism( Source( arg2_1 ) );
    deduped_90_1 := UnderlyingRing( RangeCategoryOfHomomorphismStructure( cat_1 ) );
    deduped_89_1 := MorphismMatrix( deduped_91_1 );
    deduped_88_1 := MorphismMatrix( deduped_93_1 );
    deduped_87_1 := MorphismMatrix( deduped_92_1 );
    deduped_86_1 := UnderlyingQuiverAlgebra( deduped_94_1 );
    deduped_85_1 := BasisPathsByVertexIndex( deduped_94_1 );
    deduped_84_1 := ObjectList( Source( deduped_96_1 ) );
    deduped_83_1 := ObjectList( Source( deduped_91_1 ) );
    deduped_82_1 := ZeroImmutable( deduped_86_1 );
    deduped_81_1 := ObjectList( Range( deduped_93_1 ) );
    deduped_80_1 := ObjectList( Range( deduped_92_1 ) );
    deduped_79_1 := ObjectList( Source( deduped_93_1 ) );
    deduped_78_1 := ObjectList( Source( deduped_92_1 ) );
    deduped_77_1 := ObjectList( Range( deduped_91_1 ) );
    deduped_76_1 := [ 1 .. Length( deduped_84_1 ) ];
    deduped_75_1 := List( deduped_78_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_74_1 := List( deduped_80_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_73_1 := List( deduped_81_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_72_1 := Length( deduped_81_1 );
    deduped_71_1 := Length( deduped_80_1 );
    deduped_70_1 := Length( deduped_79_1 );
    deduped_69_1 := Length( deduped_78_1 );
    deduped_68_1 := [ 1 .. Length( deduped_83_1 ) ];
    deduped_67_1 := [ 1 .. deduped_69_1 ];
    deduped_66_1 := [ 1 .. deduped_72_1 ];
    deduped_65_1 := [ 1 .. deduped_71_1 ];
    deduped_64_1 := [ 1 .. Length( deduped_77_1 ) ];
    deduped_63_1 := Sum( [ deduped_71_1, deduped_72_1 ] );
    deduped_62_1 := [ 1 .. deduped_63_1 ];
    deduped_61_1 := [ 1 .. Sum( [ deduped_69_1, deduped_70_1 ] ) ];
    hoisted_21_1 := deduped_81_1;
    hoisted_20_1 := deduped_80_1;
    hoisted_6_1 := List( deduped_85_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Length );
        end );
    deduped_60_1 := Sum( Concatenation( List( deduped_84_1, function ( logic_new_func_x_2 )
                local hoisted_1_2;
                hoisted_1_2 := hoisted_6_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                return Concatenation( List( hoisted_20_1, function ( logic_new_func_x_3 )
                          return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                      end ), List( hoisted_21_1, function ( logic_new_func_x_3 )
                          return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                      end ) );
            end ) ) );
    hoisted_59_1 := deduped_79_1;
    hoisted_58_1 := deduped_78_1;
    hoisted_57_1 := deduped_68_1;
    hoisted_49_1 := Concatenation( deduped_74_1, List( deduped_81_1, function ( logic_new_func_x_2 )
              return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
          end ) );
    hoisted_13_1 := deduped_86_1;
    hoisted_4_1 := deduped_62_1;
    hoisted_56_1 := List( deduped_62_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := PathAsAlgebraElement( hoisted_13_1, hoisted_49_1[logic_new_func_x_2] );
            return List( hoisted_4_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return deduped_82_1;
                    fi;
                    return;
                end );
        end );
    hoisted_55_1 := List( deduped_89_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_7_1 := Concatenation( List( deduped_80_1, function ( logic_new_func_x_2 )
              return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
          end ), deduped_73_1 );
    hoisted_54_1 := List( deduped_62_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_7_1[logic_new_func_x_2];
            return List( hoisted_4_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return hoisted_7_1[logic_new_func_x_3];
                    fi;
                    return;
                end );
        end );
    hoisted_53_1 := List( deduped_62_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_7_1[logic_new_func_x_2];
            return List( hoisted_4_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_52_1 := List( deduped_89_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_51_1 := List( deduped_89_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                end );
        end );
    hoisted_50_1 := List( deduped_62_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := IsZero( PathAsAlgebraElement( hoisted_13_1, hoisted_49_1[logic_new_func_x_2] ) );
            return List( hoisted_4_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return true;
                    fi;
                    return;
                end );
        end );
    hoisted_46_1 := List( deduped_83_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_47_1 := List( deduped_68_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_6_1[hoisted_46_1[logic_new_func_x_2]];
            return List( hoisted_4_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_7_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_48_1 := List( deduped_68_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_47_1[logic_new_func_x_2];
            return Sum( List( hoisted_4_1, function ( logic_new_func_x_3 )
                      return hoisted_1_2[logic_new_func_x_3];
                  end ) );
        end );
    hoisted_45_1 := List( deduped_89_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    hoisted_43_1 := List( deduped_77_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_44_1 := List( deduped_64_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_6_1[hoisted_43_1[logic_new_func_x_2]];
            return List( hoisted_4_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_7_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_42_1 := HomStructureOnBasisPaths( deduped_94_1 );
    hoisted_15_1 := deduped_82_1;
    hoisted_16_1 := List( deduped_66_1, function ( logic_new_func_x_2 )
            return hoisted_15_1;
        end );
    hoisted_41_1 := UnionOfRowsListList( deduped_63_1, [ UnionOfColumnsListList( deduped_69_1, [ List( deduped_87_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, UnderlyingQuiverAlgebraElement );
                    end ), List( deduped_67_1, function ( logic_new_func_x_2 )
                        return hoisted_16_1;
                    end ) ] ), UnionOfColumnsListList( deduped_70_1, [ List( deduped_95_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, UnderlyingQuiverAlgebraElement );
                    end ), List( deduped_88_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, UnderlyingQuiverAlgebraElement );
                    end ) ] ) ] );
    hoisted_26_1 := deduped_76_1;
    hoisted_25_1 := List( deduped_84_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_40_1 := List( deduped_76_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := PathAsAlgebraElement( hoisted_13_1, hoisted_25_1[logic_new_func_x_2] );
            return List( hoisted_26_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return deduped_82_1;
                    fi;
                    return;
                end );
        end );
    hoisted_37_1 := deduped_73_1;
    hoisted_38_1 := List( deduped_66_1, function ( logic_new_func_x_2 )
            return hoisted_37_1[logic_new_func_x_2];
        end );
    hoisted_39_1 := UnionOfRowsListList( deduped_63_1, [ UnionOfColumnsListList( deduped_69_1, [ List( deduped_87_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                            end );
                    end ), List( deduped_67_1, function ( logic_new_func_x_2 )
                        return hoisted_38_1;
                    end ) ] ), UnionOfColumnsListList( deduped_70_1, [ List( deduped_95_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                            end );
                    end ), List( deduped_88_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                            end );
                    end ) ] ) ] );
    hoisted_35_1 := deduped_66_1;
    hoisted_34_1 := deduped_75_1;
    hoisted_36_1 := UnionOfRowsListList( deduped_63_1, [ UnionOfColumnsListList( deduped_69_1, [ List( deduped_87_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                            end );
                    end ), List( deduped_67_1, function ( logic_new_func_x_2 )
                        local hoisted_1_2;
                        hoisted_1_2 := hoisted_34_1[logic_new_func_x_2];
                        return List( hoisted_35_1, function ( logic_new_func_x_3 )
                                return hoisted_1_2;
                            end );
                    end ) ] ), UnionOfColumnsListList( deduped_70_1, [ List( deduped_95_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                            end );
                    end ), List( deduped_88_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                            end );
                    end ) ] ) ] );
    hoisted_3_1 := List( deduped_84_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_33_1 := List( deduped_76_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_3_1[logic_new_func_x_2];
            return List( hoisted_26_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return hoisted_3_1[logic_new_func_x_3];
                    fi;
                    return;
                end );
        end );
    hoisted_32_1 := List( deduped_76_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_3_1[logic_new_func_x_2];
            return List( hoisted_26_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_30_1 := List( deduped_66_1, function ( logic_new_func_x_2 )
            return true;
        end );
    hoisted_31_1 := UnionOfRowsListList( deduped_63_1, [ UnionOfColumnsListList( deduped_69_1, [ List( deduped_87_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                            end );
                    end ), List( deduped_67_1, function ( logic_new_func_x_2 )
                        return hoisted_30_1;
                    end ) ] ), UnionOfColumnsListList( deduped_70_1, [ List( deduped_95_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                            end );
                    end ), List( deduped_88_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                            end );
                    end ) ] ) ] );
    hoisted_28_1 := List( deduped_76_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_6_1[hoisted_3_1[logic_new_func_x_2]];
            return List( hoisted_4_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_7_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_29_1 := List( deduped_76_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_28_1[logic_new_func_x_2];
            return Sum( List( hoisted_4_1, function ( logic_new_func_x_3 )
                      return hoisted_1_2[logic_new_func_x_3];
                  end ) );
        end );
    hoisted_27_1 := List( deduped_76_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := IsZero( PathAsAlgebraElement( hoisted_13_1, hoisted_25_1[logic_new_func_x_2] ) );
            return List( hoisted_26_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return true;
                    fi;
                    return;
                end );
        end );
    hoisted_23_1 := deduped_61_1;
    hoisted_22_1 := Concatenation( deduped_75_1, List( deduped_79_1, function ( logic_new_func_x_2 )
              return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
          end ) );
    hoisted_24_1 := List( deduped_76_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_6_1[hoisted_3_1[logic_new_func_x_2]];
            return List( hoisted_23_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_22_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_18_1 := [ 1 .. Length( ObjectList( Range( deduped_96_1 ) ) ) ];
    hoisted_14_1 := deduped_65_1;
    hoisted_12_1 := deduped_74_1;
    hoisted_17_1 := UnionOfColumnsListList( deduped_71_1, [ List( deduped_65_1, function ( logic_new_func_x_2 )
                  local hoisted_1_2;
                  hoisted_1_2 := PathAsAlgebraElement( hoisted_13_1, hoisted_12_1[logic_new_func_x_2] );
                  return List( hoisted_14_1, function ( logic_new_func_x_3 )
                          if logic_new_func_x_2 = logic_new_func_x_3 then
                              return hoisted_1_2;
                          else
                              return deduped_82_1;
                          fi;
                          return;
                      end );
              end ), List( deduped_65_1, function ( logic_new_func_x_2 )
                  return hoisted_16_1;
              end ) ] );
    hoisted_11_1 := List( MorphismMatrix( deduped_96_1 ), function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    hoisted_19_1 := List( deduped_76_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_11_1[logic_new_func_x_2];
            return List( hoisted_4_1, function ( logic_new_func_x_3 )
                    return Iterated( List( hoisted_18_1, function ( logic_new_func_x_4 )
                              return hoisted_1_2[logic_new_func_x_4] * hoisted_17_1[logic_new_func_x_4][logic_new_func_x_3];
                          end ), function ( alpha_4, beta_4 )
                            return alpha_4 + beta_4;
                        end, hoisted_15_1 );
                end );
        end );
    hoisted_10_1 := deduped_85_1;
    hoisted_8_1 := List( deduped_62_1, function ( logic_new_func_x_2 )
            return hoisted_7_1[logic_new_func_x_2];
        end );
    hoisted_9_1 := List( deduped_76_1, function ( logic_new_func_x_2 )
            return hoisted_8_1;
        end );
    hoisted_5_1 := List( deduped_76_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_3_1[logic_new_func_x_2];
            return List( hoisted_4_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_2_1 := ListWithKeys( deduped_62_1, function ( key_2, logic_new_func_x_2 )
            local hoisted_1_2, hoisted_2_2, hoisted_3_2;
            hoisted_3_2 := hoisted_56_1[logic_new_func_x_2];
            hoisted_2_2 := hoisted_54_1[logic_new_func_x_2];
            hoisted_1_2 := hoisted_53_1[logic_new_func_x_2];
            return ListWithKeys( hoisted_4_1, function ( key_3, logic_new_func_x_3 )
                    return CoefficientsOfPaths( hoisted_10_1[hoisted_1_2[logic_new_func_x_3]][hoisted_2_2[logic_new_func_x_3]], hoisted_3_2[logic_new_func_x_3] );
                end );
        end );
    hoisted_1_1 := ListWithKeys( deduped_61_1, function ( key_2, logic_new_func_x_2 )
            local hoisted_1_2, hoisted_2_2, hoisted_3_2;
            hoisted_3_2 := hoisted_41_1[logic_new_func_x_2];
            hoisted_2_2 := hoisted_39_1[logic_new_func_x_2];
            hoisted_1_2 := hoisted_36_1[logic_new_func_x_2];
            return ListWithKeys( hoisted_4_1, function ( key_3, logic_new_func_x_3 )
                    return CoefficientsOfPaths( hoisted_10_1[hoisted_1_2[logic_new_func_x_3]][hoisted_2_2[logic_new_func_x_3]], hoisted_3_2[logic_new_func_x_3] );
                end );
        end );
    return IsZero( DecideZeroRows( HomalgMatrixListList( UnionOfColumnsListList( 1, List( deduped_76_1, function ( logic_new_func_x_2 )
                    local hoisted_1_2, hoisted_2_2, hoisted_3_2;
                    hoisted_3_2 := hoisted_19_1[logic_new_func_x_2];
                    hoisted_2_2 := hoisted_9_1[logic_new_func_x_2];
                    hoisted_1_2 := hoisted_5_1[logic_new_func_x_2];
                    return UnionOfColumnsListList( 1, List( hoisted_4_1, function ( logic_new_func_x_3 )
                              local deduped_1_3, deduped_2_3, deduped_3_3;
                              deduped_3_3 := hoisted_2_2[logic_new_func_x_3];
                              deduped_2_3 := hoisted_1_2[logic_new_func_x_3];
                              deduped_1_3 := hoisted_6_1[deduped_2_3][deduped_3_3];
                              if deduped_1_3 = 0 then
                                  return NullMatImmutable( 1, deduped_1_3 );
                              else
                                  return [ CoefficientsOfPaths( hoisted_10_1[deduped_2_3][deduped_3_3], hoisted_3_2[logic_new_func_x_3] ) ];
                              fi;
                              return;
                          end ) );
                end ) ), 1, deduped_60_1, deduped_90_1 ), HomalgMatrixListList( UnionOfRowsListList( deduped_60_1, Concatenation( List( deduped_76_1, function ( logic_new_func_x_2 )
                      local hoisted_1_2, hoisted_2_2;
                      hoisted_1_2 := hoisted_24_1[logic_new_func_x_2];
                      hoisted_2_2 := Sum( hoisted_23_1, function ( logic_new_func_x_3 )
                              return hoisted_1_2[logic_new_func_x_3];
                          end );
                      return UnionOfColumnsListList( Sum( List( hoisted_23_1, function ( logic_new_func_x_3 )
                                  return hoisted_1_2[logic_new_func_x_3];
                              end ) ), List( hoisted_26_1, function ( logic_new_func_x_3 )
                                local hoisted_1_3, hoisted_2_3, hoisted_3_3, hoisted_4_3, hoisted_5_3, hoisted_6_3, deduped_7_3, deduped_8_3, deduped_9_3;
                                deduped_9_3 := hoisted_29_1[logic_new_func_x_3];
                                if hoisted_27_1[logic_new_func_x_3][logic_new_func_x_2] then
                                    return NullMatImmutable( hoisted_2_2, deduped_9_3 );
                                else
                                    deduped_8_3 := hoisted_33_1[logic_new_func_x_3][logic_new_func_x_2];
                                    deduped_7_3 := hoisted_32_1[logic_new_func_x_3][logic_new_func_x_2];
                                    hoisted_6_3 := [ 1 .. hoisted_6_1[deduped_7_3][deduped_8_3] ];
                                    hoisted_5_3 := deduped_7_3;
                                    hoisted_4_3 := hoisted_42_1[deduped_8_3];
                                    hoisted_2_3 := hoisted_28_1[logic_new_func_x_3];
                                    hoisted_3_3 := Sum( hoisted_4_1, function ( logic_new_func_x_4 )
                                            return hoisted_2_3[logic_new_func_x_4];
                                        end );
                                    hoisted_1_3 := CoefficientsOfPaths( hoisted_10_1[deduped_7_3][deduped_8_3], hoisted_40_1[logic_new_func_x_3][logic_new_func_x_2] );
                                    return UnionOfRowsListList( deduped_9_3, ListWithKeys( hoisted_23_1, function ( key_4, logic_new_func_x_4 )
                                              local hoisted_1_4, hoisted_2_4, hoisted_3_4, hoisted_4_4, hoisted_5_4, deduped_6_4;
                                              deduped_6_4 := hoisted_1_2[logic_new_func_x_4];
                                              if deduped_6_4 = 0 then
                                                  return NullMatImmutable( deduped_6_4, hoisted_3_3 );
                                              else
                                                  hoisted_5_4 := hoisted_1_1[key_4];
                                                  hoisted_4_4 := hoisted_39_1[logic_new_func_x_4];
                                                  hoisted_3_4 := hoisted_36_1[logic_new_func_x_4];
                                                  hoisted_2_4 := deduped_6_4;
                                                  hoisted_1_4 := hoisted_31_1[logic_new_func_x_4];
                                                  return UnionOfColumnsListList( deduped_6_4, ListWithKeys( hoisted_4_1, function ( key_5, logic_new_func_x_5 )
                                                            local hoisted_1_5, hoisted_2_5, hoisted_3_5, deduped_4_5, deduped_5_5, deduped_6_5;
                                                            deduped_4_5 := hoisted_2_3[logic_new_func_x_5];
                                                            if hoisted_1_4[logic_new_func_x_5] or deduped_4_5 = 0 then
                                                                return NullMatImmutable( hoisted_2_4, deduped_4_5 );
                                                            else
                                                                deduped_6_5 := hoisted_4_4[logic_new_func_x_5];
                                                                deduped_5_5 := hoisted_3_4[logic_new_func_x_5];
                                                                hoisted_3_5 := [ 1 .. hoisted_6_1[deduped_5_5][deduped_6_5] ];
                                                                hoisted_2_5 := hoisted_4_3[deduped_5_5][hoisted_5_3][deduped_6_5];
                                                                hoisted_1_5 := hoisted_5_4[key_5];
                                                                return Sum( hoisted_6_3, function ( p_6 )
                                                                        local hoisted_1_6, hoisted_2_6;
                                                                        hoisted_2_6 := hoisted_2_5[p_6];
                                                                        hoisted_1_6 := hoisted_1_3[p_6];
                                                                        return Sum( hoisted_3_5, function ( q_7 )
                                                                                return hoisted_1_6 * hoisted_1_5[q_7] * hoisted_2_6[q_7];
                                                                            end );
                                                                    end );
                                                            fi;
                                                            return;
                                                        end ) );
                                              fi;
                                              return;
                                          end ) );
                                fi;
                                return;
                            end ) );
                  end ), List( deduped_64_1, function ( logic_new_func_x_2 )
                      local hoisted_1_2, hoisted_2_2;
                      hoisted_1_2 := hoisted_44_1[logic_new_func_x_2];
                      hoisted_2_2 := Sum( hoisted_4_1, function ( logic_new_func_x_3 )
                              return hoisted_1_2[logic_new_func_x_3];
                          end );
                      return UnionOfColumnsListList( Sum( List( hoisted_4_1, function ( logic_new_func_x_3 )
                                  return hoisted_1_2[logic_new_func_x_3];
                              end ) ), List( hoisted_57_1, function ( logic_new_func_x_3 )
                                local hoisted_1_3, hoisted_2_3, hoisted_3_3, hoisted_4_3, hoisted_5_3, hoisted_6_3, deduped_7_3, deduped_8_3, deduped_9_3;
                                deduped_9_3 := hoisted_48_1[logic_new_func_x_3];
                                if hoisted_45_1[logic_new_func_x_3][logic_new_func_x_2] then
                                    return NullMatImmutable( hoisted_2_2, deduped_9_3 );
                                else
                                    deduped_8_3 := hoisted_52_1[logic_new_func_x_3][logic_new_func_x_2];
                                    deduped_7_3 := hoisted_51_1[logic_new_func_x_3][logic_new_func_x_2];
                                    hoisted_6_3 := [ 1 .. hoisted_6_1[deduped_7_3][deduped_8_3] ];
                                    hoisted_5_3 := deduped_7_3;
                                    hoisted_4_3 := hoisted_42_1[deduped_8_3];
                                    hoisted_2_3 := hoisted_47_1[logic_new_func_x_3];
                                    hoisted_3_3 := Sum( hoisted_4_1, function ( logic_new_func_x_4 )
                                            return hoisted_2_3[logic_new_func_x_4];
                                        end );
                                    hoisted_1_3 := CoefficientsOfPaths( hoisted_10_1[deduped_7_3][deduped_8_3], hoisted_55_1[logic_new_func_x_3][logic_new_func_x_2] );
                                    return UnionOfRowsListList( deduped_9_3, ListWithKeys( hoisted_4_1, function ( key_4, logic_new_func_x_4 )
                                              local hoisted_1_4, hoisted_2_4, hoisted_3_4, hoisted_4_4, hoisted_5_4, deduped_6_4;
                                              deduped_6_4 := hoisted_1_2[logic_new_func_x_4];
                                              if deduped_6_4 = 0 then
                                                  return NullMatImmutable( deduped_6_4, hoisted_3_3 );
                                              else
                                                  hoisted_5_4 := hoisted_2_1[key_4];
                                                  hoisted_4_4 := hoisted_54_1[logic_new_func_x_4];
                                                  hoisted_3_4 := hoisted_53_1[logic_new_func_x_4];
                                                  hoisted_2_4 := deduped_6_4;
                                                  hoisted_1_4 := hoisted_50_1[logic_new_func_x_4];
                                                  return UnionOfColumnsListList( deduped_6_4, ListWithKeys( hoisted_4_1, function ( key_5, logic_new_func_x_5 )
                                                            local hoisted_1_5, hoisted_2_5, hoisted_3_5, deduped_4_5, deduped_5_5, deduped_6_5;
                                                            deduped_4_5 := hoisted_2_3[logic_new_func_x_5];
                                                            if hoisted_1_4[logic_new_func_x_5] or deduped_4_5 = 0 then
                                                                return NullMatImmutable( hoisted_2_4, deduped_4_5 );
                                                            else
                                                                deduped_6_5 := hoisted_4_4[logic_new_func_x_5];
                                                                deduped_5_5 := hoisted_3_4[logic_new_func_x_5];
                                                                hoisted_3_5 := [ 1 .. hoisted_6_1[deduped_5_5][deduped_6_5] ];
                                                                hoisted_2_5 := hoisted_4_3[deduped_5_5][hoisted_5_3][deduped_6_5];
                                                                hoisted_1_5 := hoisted_5_4[key_5];
                                                                return Sum( hoisted_6_3, function ( p_6 )
                                                                        local hoisted_1_6, hoisted_2_6;
                                                                        hoisted_2_6 := hoisted_2_5[p_6];
                                                                        hoisted_1_6 := hoisted_1_3[p_6];
                                                                        return Sum( hoisted_3_5, function ( q_7 )
                                                                                return hoisted_1_6 * hoisted_1_5[q_7] * hoisted_2_6[q_7];
                                                                            end );
                                                                    end );
                                                            fi;
                                                            return;
                                                        end ) );
                                              fi;
                                              return;
                                          end ) );
                                fi;
                                return;
                            end ) );
                  end ) ) ), Sum( [ Sum( Concatenation( List( deduped_84_1, function ( logic_new_func_x_2 )
                            local hoisted_1_2;
                            hoisted_1_2 := hoisted_6_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                            return Concatenation( List( hoisted_58_1, function ( logic_new_func_x_3 )
                                      return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                  end ), List( hoisted_59_1, function ( logic_new_func_x_3 )
                                      return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                  end ) );
                        end ) ) ), Sum( Concatenation( List( deduped_77_1, function ( logic_new_func_x_2 )
                            local hoisted_1_2;
                            hoisted_1_2 := hoisted_6_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                            return Concatenation( List( hoisted_20_1, function ( logic_new_func_x_3 )
                                      return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                  end ), List( hoisted_21_1, function ( logic_new_func_x_3 )
                                      return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                  end ) );
                        end ) ) ) ] ), deduped_60_1, deduped_90_1 ) ) );
end
########
        
    , 301 : IsPrecompiledDerivation := true );
    
    ##
    AddIsEqualAsSubobjects( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    local hoisted_1_1, hoisted_2_1, hoisted_3_1, hoisted_4_1, hoisted_5_1, hoisted_6_1, hoisted_7_1, hoisted_8_1, hoisted_9_1, hoisted_10_1, hoisted_11_1, hoisted_12_1, hoisted_13_1, hoisted_14_1, hoisted_15_1, hoisted_16_1, hoisted_17_1, hoisted_18_1, hoisted_19_1, hoisted_20_1, hoisted_21_1, hoisted_22_1, hoisted_23_1, hoisted_24_1, hoisted_25_1, hoisted_26_1, hoisted_27_1, hoisted_28_1, hoisted_29_1, hoisted_30_1, hoisted_31_1, hoisted_32_1, hoisted_33_1, hoisted_34_1, hoisted_35_1, hoisted_36_1, hoisted_37_1, hoisted_38_1, hoisted_39_1, hoisted_40_1, hoisted_41_1, hoisted_42_1, hoisted_43_1, hoisted_44_1, hoisted_45_1, hoisted_46_1, hoisted_47_1, hoisted_48_1, hoisted_49_1, hoisted_50_1, hoisted_51_1, hoisted_52_1, hoisted_53_1, hoisted_54_1, hoisted_55_1, hoisted_56_1, hoisted_57_1, hoisted_58_1, hoisted_59_1, hoisted_60_1, hoisted_61_1, hoisted_62_1, hoisted_63_1, hoisted_64_1, hoisted_65_1, hoisted_66_1, hoisted_67_1, hoisted_68_1, hoisted_69_1, hoisted_70_1, hoisted_71_1, hoisted_72_1, hoisted_73_1, hoisted_74_1, hoisted_75_1, hoisted_76_1, hoisted_77_1, hoisted_78_1, hoisted_79_1, hoisted_80_1, hoisted_81_1, hoisted_82_1, hoisted_83_1, hoisted_84_1, hoisted_85_1, hoisted_86_1, hoisted_87_1, hoisted_88_1, hoisted_89_1, hoisted_90_1, hoisted_91_1, hoisted_92_1, hoisted_93_1, hoisted_94_1, hoisted_95_1, hoisted_96_1, hoisted_97_1, hoisted_98_1, hoisted_99_1, hoisted_100_1, hoisted_101_1, hoisted_102_1, hoisted_103_1, hoisted_104_1, hoisted_105_1, hoisted_106_1, hoisted_107_1, hoisted_108_1, hoisted_109_1, hoisted_110_1, hoisted_111_1, deduped_112_1, deduped_113_1, deduped_114_1, deduped_115_1, deduped_116_1, deduped_117_1, deduped_118_1, deduped_119_1, deduped_120_1, deduped_121_1, deduped_122_1, deduped_123_1, deduped_124_1, deduped_125_1, deduped_126_1, deduped_127_1, deduped_128_1, deduped_129_1, deduped_130_1, deduped_131_1, deduped_132_1, deduped_133_1, deduped_134_1, deduped_135_1, deduped_136_1, deduped_137_1, deduped_138_1, deduped_139_1, deduped_140_1, deduped_141_1, deduped_142_1, deduped_143_1, deduped_144_1, deduped_145_1, deduped_146_1, deduped_147_1, deduped_148_1, deduped_149_1, deduped_150_1, deduped_151_1, deduped_152_1, deduped_153_1, deduped_154_1, deduped_155_1, deduped_156_1, deduped_157_1, deduped_158_1, deduped_159_1, deduped_160_1, deduped_161_1, deduped_162_1, deduped_163_1, deduped_164_1, deduped_165_1, deduped_166_1, deduped_167_1, deduped_168_1, deduped_169_1, deduped_170_1, deduped_171_1, deduped_172_1, deduped_173_1, deduped_174_1, deduped_175_1, deduped_176_1, deduped_177_1, deduped_178_1, deduped_179_1, deduped_180_1, deduped_181_1, deduped_182_1;
    deduped_182_1 := UnderlyingMorphism( arg3_1 );
    deduped_181_1 := UnderlyingMorphism( arg2_1 );
    deduped_180_1 := MorphismMatrix( deduped_182_1 );
    deduped_179_1 := MorphismMatrix( deduped_181_1 );
    deduped_178_1 := UnderlyingCategory( UnderlyingCategory( cat_1 ) );
    deduped_177_1 := RelationMorphism( Range( arg2_1 ) );
    deduped_176_1 := RelationMorphism( Range( arg3_1 ) );
    deduped_175_1 := CorelationMorphism( Source( arg3_1 ) );
    deduped_174_1 := CorelationMorphism( Source( arg2_1 ) );
    deduped_173_1 := UnderlyingRing( RangeCategoryOfHomomorphismStructure( cat_1 ) );
    deduped_172_1 := MorphismMatrix( deduped_177_1 );
    deduped_171_1 := MorphismMatrix( deduped_174_1 );
    deduped_170_1 := List( deduped_180_1, function ( logic_new_func_new_row_2 )
            return List( logic_new_func_new_row_2, UnderlyingQuiverAlgebraElement );
        end );
    deduped_169_1 := MorphismMatrix( deduped_175_1 );
    deduped_168_1 := MorphismMatrix( deduped_176_1 );
    deduped_167_1 := UnderlyingQuiverAlgebra( deduped_178_1 );
    deduped_166_1 := List( deduped_179_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    deduped_165_1 := BasisPathsByVertexIndex( deduped_178_1 );
    deduped_164_1 := ObjectList( Source( deduped_182_1 ) );
    deduped_163_1 := ObjectList( Source( deduped_181_1 ) );
    deduped_162_1 := List( deduped_171_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, UnderlyingQuiverAlgebraElement );
        end );
    deduped_161_1 := List( deduped_169_1, function ( logic_new_func_new_row_2 )
            return List( logic_new_func_new_row_2, UnderlyingQuiverAlgebraElement );
        end );
    deduped_160_1 := ZeroImmutable( deduped_167_1 );
    deduped_159_1 := ObjectList( Range( deduped_177_1 ) );
    deduped_158_1 := ObjectList( Source( deduped_174_1 ) );
    deduped_157_1 := ObjectList( Source( deduped_177_1 ) );
    deduped_156_1 := ObjectList( Range( deduped_176_1 ) );
    deduped_155_1 := ObjectList( Source( deduped_175_1 ) );
    deduped_154_1 := ObjectList( Source( deduped_176_1 ) );
    deduped_153_1 := ObjectList( Range( deduped_175_1 ) );
    deduped_152_1 := ObjectList( Range( deduped_174_1 ) );
    deduped_151_1 := [ 1 .. Length( deduped_164_1 ) ];
    deduped_150_1 := [ 1 .. Length( deduped_163_1 ) ];
    deduped_149_1 := List( deduped_157_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_148_1 := List( deduped_159_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_147_1 := List( deduped_158_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_146_1 := List( deduped_152_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_145_1 := List( deduped_155_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_144_1 := List( deduped_154_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_143_1 := List( deduped_156_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_142_1 := List( deduped_153_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    deduped_141_1 := Length( deduped_159_1 );
    deduped_140_1 := Length( deduped_158_1 );
    deduped_139_1 := Length( deduped_157_1 );
    deduped_138_1 := Length( deduped_156_1 );
    deduped_137_1 := Length( deduped_155_1 );
    deduped_136_1 := Length( deduped_154_1 );
    deduped_135_1 := Length( deduped_153_1 );
    deduped_134_1 := Length( deduped_152_1 );
    deduped_133_1 := [ 1 .. deduped_137_1 ];
    deduped_132_1 := [ 1 .. deduped_139_1 ];
    deduped_131_1 := [ 1 .. deduped_141_1 ];
    deduped_130_1 := [ 1 .. deduped_140_1 ];
    deduped_129_1 := [ 1 .. deduped_136_1 ];
    deduped_128_1 := [ 1 .. deduped_138_1 ];
    deduped_127_1 := [ 1 .. deduped_135_1 ];
    deduped_126_1 := [ 1 .. deduped_134_1 ];
    deduped_125_1 := List( deduped_171_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    deduped_124_1 := List( deduped_169_1, function ( logic_new_func_new_row_2 )
            return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                    return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                end );
        end );
    deduped_123_1 := List( deduped_171_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                end );
        end );
    deduped_122_1 := List( deduped_171_1, function ( logic_new_func_x_2 )
            return List( logic_new_func_x_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                end );
        end );
    deduped_121_1 := List( deduped_169_1, function ( logic_new_func_new_row_2 )
            return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                end );
        end );
    deduped_120_1 := List( deduped_169_1, function ( logic_new_func_new_row_2 )
            return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                    return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                end );
        end );
    deduped_119_1 := Sum( [ deduped_141_1, deduped_134_1 ] );
    deduped_118_1 := Sum( [ deduped_138_1, deduped_135_1 ] );
    deduped_117_1 := [ 1 .. deduped_119_1 ];
    deduped_116_1 := [ 1 .. Sum( [ deduped_139_1, deduped_140_1 ] ) ];
    deduped_115_1 := [ 1 .. deduped_118_1 ];
    deduped_114_1 := [ 1 .. Sum( [ deduped_136_1, deduped_137_1 ] ) ];
    hoisted_76_1 := deduped_152_1;
    hoisted_75_1 := deduped_159_1;
    hoisted_8_1 := List( deduped_165_1, function ( logic_new_func_list_2 )
            return List( logic_new_func_list_2, Length );
        end );
    deduped_113_1 := Sum( Concatenation( List( deduped_164_1, function ( logic_new_func_x_2 )
                local hoisted_1_2;
                hoisted_1_2 := hoisted_8_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                return Concatenation( List( hoisted_75_1, function ( logic_new_func_x_3 )
                          return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                      end ), List( hoisted_76_1, function ( logic_new_func_x_3 )
                          return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                      end ) );
            end ) ) );
    hoisted_23_1 := deduped_153_1;
    hoisted_22_1 := deduped_156_1;
    deduped_112_1 := Sum( Concatenation( List( deduped_163_1, function ( logic_new_func_x_2 )
                local hoisted_1_2;
                hoisted_1_2 := hoisted_8_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                return Concatenation( List( hoisted_22_1, function ( logic_new_func_x_3 )
                          return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                      end ), List( hoisted_23_1, function ( logic_new_func_x_3 )
                          return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                      end ) );
            end ) ) );
    hoisted_111_1 := deduped_158_1;
    hoisted_110_1 := deduped_157_1;
    hoisted_109_1 := deduped_133_1;
    hoisted_101_1 := Concatenation( deduped_148_1, List( deduped_152_1, function ( logic_new_func_x_2 )
              return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
          end ) );
    hoisted_63_1 := deduped_117_1;
    hoisted_15_1 := deduped_167_1;
    hoisted_108_1 := List( deduped_117_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := PathAsAlgebraElement( hoisted_15_1, hoisted_101_1[logic_new_func_x_2] );
            return List( hoisted_63_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return deduped_160_1;
                    fi;
                    return;
                end );
        end );
    hoisted_107_1 := deduped_161_1;
    hoisted_65_1 := Concatenation( List( deduped_159_1, function ( logic_new_func_x_2 )
              return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
          end ), deduped_146_1 );
    hoisted_106_1 := List( deduped_117_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_65_1[logic_new_func_x_2];
            return List( hoisted_63_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return hoisted_65_1[logic_new_func_x_3];
                    fi;
                    return;
                end );
        end );
    hoisted_105_1 := List( deduped_117_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_65_1[logic_new_func_x_2];
            return List( hoisted_63_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_104_1 := deduped_121_1;
    hoisted_103_1 := deduped_120_1;
    hoisted_102_1 := List( deduped_117_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := IsZero( PathAsAlgebraElement( hoisted_15_1, hoisted_101_1[logic_new_func_x_2] ) );
            return List( hoisted_63_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return true;
                    fi;
                    return;
                end );
        end );
    hoisted_98_1 := deduped_145_1;
    hoisted_99_1 := List( deduped_133_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_8_1[hoisted_98_1[logic_new_func_x_2]];
            return List( hoisted_63_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_65_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_100_1 := List( deduped_133_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_99_1[logic_new_func_x_2];
            return Sum( List( hoisted_63_1, function ( logic_new_func_x_3 )
                      return hoisted_1_2[logic_new_func_x_3];
                  end ) );
        end );
    hoisted_97_1 := deduped_124_1;
    hoisted_39_1 := deduped_142_1;
    hoisted_96_1 := List( deduped_127_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_8_1[hoisted_39_1[logic_new_func_x_2]];
            return List( hoisted_63_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_65_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_17_1 := deduped_160_1;
    hoisted_71_1 := List( deduped_126_1, function ( logic_new_func_x_2 )
            return hoisted_17_1;
        end );
    hoisted_95_1 := UnionOfRowsListList( deduped_119_1, [ UnionOfColumnsListList( deduped_139_1, [ List( deduped_172_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, UnderlyingQuiverAlgebraElement );
                    end ), List( deduped_132_1, function ( logic_new_func_x_2 )
                        return hoisted_71_1;
                    end ) ] ), UnionOfColumnsListList( deduped_140_1, [ deduped_166_1, deduped_162_1 ] ) ] );
    hoisted_81_1 := deduped_151_1;
    hoisted_80_1 := List( deduped_164_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_94_1 := List( deduped_151_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := PathAsAlgebraElement( hoisted_15_1, hoisted_80_1[logic_new_func_x_2] );
            return List( hoisted_81_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return deduped_160_1;
                    fi;
                    return;
                end );
        end );
    hoisted_45_1 := deduped_146_1;
    hoisted_92_1 := List( deduped_126_1, function ( logic_new_func_x_2 )
            return hoisted_45_1[logic_new_func_x_2];
        end );
    hoisted_93_1 := UnionOfRowsListList( deduped_119_1, [ UnionOfColumnsListList( deduped_139_1, [ List( deduped_172_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                            end );
                    end ), List( deduped_132_1, function ( logic_new_func_x_2 )
                        return hoisted_92_1;
                    end ) ] ), UnionOfColumnsListList( deduped_140_1, [ List( deduped_179_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                            end );
                    end ), deduped_123_1 ] ) ] );
    hoisted_90_1 := deduped_126_1;
    hoisted_89_1 := deduped_149_1;
    hoisted_91_1 := UnionOfRowsListList( deduped_119_1, [ UnionOfColumnsListList( deduped_139_1, [ List( deduped_172_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                            end );
                    end ), List( deduped_132_1, function ( logic_new_func_x_2 )
                        local hoisted_1_2;
                        hoisted_1_2 := hoisted_89_1[logic_new_func_x_2];
                        return List( hoisted_90_1, function ( logic_new_func_x_3 )
                                return hoisted_1_2;
                            end );
                    end ) ] ), UnionOfColumnsListList( deduped_140_1, [ List( deduped_179_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                            end );
                    end ), deduped_122_1 ] ) ] );
    hoisted_62_1 := List( deduped_164_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_88_1 := List( deduped_151_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_62_1[logic_new_func_x_2];
            return List( hoisted_81_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return hoisted_62_1[logic_new_func_x_3];
                    fi;
                    return;
                end );
        end );
    hoisted_87_1 := List( deduped_151_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_62_1[logic_new_func_x_2];
            return List( hoisted_81_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_85_1 := List( deduped_126_1, function ( logic_new_func_x_2 )
            return true;
        end );
    hoisted_86_1 := UnionOfRowsListList( deduped_119_1, [ UnionOfColumnsListList( deduped_139_1, [ List( deduped_172_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                            end );
                    end ), List( deduped_132_1, function ( logic_new_func_x_2 )
                        return hoisted_85_1;
                    end ) ] ), UnionOfColumnsListList( deduped_140_1, [ List( deduped_179_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                            end );
                    end ), deduped_125_1 ] ) ] );
    hoisted_83_1 := List( deduped_151_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_8_1[hoisted_62_1[logic_new_func_x_2]];
            return List( hoisted_63_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_65_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_84_1 := List( deduped_151_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_83_1[logic_new_func_x_2];
            return Sum( List( hoisted_63_1, function ( logic_new_func_x_3 )
                      return hoisted_1_2[logic_new_func_x_3];
                  end ) );
        end );
    hoisted_82_1 := List( deduped_151_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := IsZero( PathAsAlgebraElement( hoisted_15_1, hoisted_80_1[logic_new_func_x_2] ) );
            return List( hoisted_81_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return true;
                    fi;
                    return;
                end );
        end );
    hoisted_78_1 := deduped_116_1;
    hoisted_77_1 := Concatenation( deduped_149_1, deduped_147_1 );
    hoisted_79_1 := List( deduped_151_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_8_1[hoisted_62_1[logic_new_func_x_2]];
            return List( hoisted_78_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_77_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_73_1 := [ 1 .. Length( ObjectList( Range( deduped_182_1 ) ) ) ];
    hoisted_70_1 := deduped_131_1;
    hoisted_69_1 := deduped_148_1;
    hoisted_72_1 := UnionOfColumnsListList( deduped_141_1, [ List( deduped_131_1, function ( logic_new_func_x_2 )
                  local hoisted_1_2;
                  hoisted_1_2 := PathAsAlgebraElement( hoisted_15_1, hoisted_69_1[logic_new_func_x_2] );
                  return List( hoisted_70_1, function ( logic_new_func_x_3 )
                          if logic_new_func_x_2 = logic_new_func_x_3 then
                              return hoisted_1_2;
                          else
                              return deduped_160_1;
                          fi;
                          return;
                      end );
              end ), List( deduped_131_1, function ( logic_new_func_x_2 )
                  return hoisted_71_1;
              end ) ] );
    hoisted_68_1 := deduped_170_1;
    hoisted_74_1 := List( deduped_151_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_68_1[logic_new_func_x_2];
            return List( hoisted_63_1, function ( logic_new_func_x_3 )
                    return Iterated( List( hoisted_73_1, function ( logic_new_func_x_4 )
                              return hoisted_1_2[logic_new_func_x_4] * hoisted_72_1[logic_new_func_x_4][logic_new_func_x_3];
                          end ), function ( alpha_4, beta_4 )
                            return alpha_4 + beta_4;
                        end, hoisted_17_1 );
                end );
        end );
    hoisted_66_1 := List( deduped_117_1, function ( logic_new_func_x_2 )
            return hoisted_65_1[logic_new_func_x_2];
        end );
    hoisted_67_1 := List( deduped_151_1, function ( logic_new_func_x_2 )
            return hoisted_66_1;
        end );
    hoisted_64_1 := List( deduped_151_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_62_1[logic_new_func_x_2];
            return List( hoisted_63_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_61_1 := deduped_155_1;
    hoisted_60_1 := deduped_154_1;
    hoisted_59_1 := deduped_130_1;
    hoisted_51_1 := Concatenation( deduped_143_1, List( deduped_153_1, function ( logic_new_func_x_2 )
              return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
          end ) );
    hoisted_6_1 := deduped_115_1;
    hoisted_58_1 := List( deduped_115_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := PathAsAlgebraElement( hoisted_15_1, hoisted_51_1[logic_new_func_x_2] );
            return List( hoisted_6_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return deduped_160_1;
                    fi;
                    return;
                end );
        end );
    hoisted_57_1 := deduped_162_1;
    hoisted_9_1 := Concatenation( List( deduped_156_1, function ( logic_new_func_x_2 )
              return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
          end ), deduped_142_1 );
    hoisted_56_1 := List( deduped_115_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_9_1[logic_new_func_x_2];
            return List( hoisted_6_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return hoisted_9_1[logic_new_func_x_3];
                    fi;
                    return;
                end );
        end );
    hoisted_55_1 := List( deduped_115_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_9_1[logic_new_func_x_2];
            return List( hoisted_6_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_54_1 := deduped_123_1;
    hoisted_53_1 := deduped_122_1;
    hoisted_52_1 := List( deduped_115_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := IsZero( PathAsAlgebraElement( hoisted_15_1, hoisted_51_1[logic_new_func_x_2] ) );
            return List( hoisted_6_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return true;
                    fi;
                    return;
                end );
        end );
    hoisted_48_1 := deduped_147_1;
    hoisted_49_1 := List( deduped_130_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_8_1[hoisted_48_1[logic_new_func_x_2]];
            return List( hoisted_6_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_9_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_50_1 := List( deduped_130_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_49_1[logic_new_func_x_2];
            return Sum( List( hoisted_6_1, function ( logic_new_func_x_3 )
                      return hoisted_1_2[logic_new_func_x_3];
                  end ) );
        end );
    hoisted_47_1 := deduped_125_1;
    hoisted_46_1 := List( deduped_126_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_8_1[hoisted_45_1[logic_new_func_x_2]];
            return List( hoisted_6_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_9_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_44_1 := HomStructureOnBasisPaths( deduped_178_1 );
    hoisted_18_1 := List( deduped_127_1, function ( logic_new_func_x_2 )
            return hoisted_17_1;
        end );
    hoisted_43_1 := UnionOfRowsListList( deduped_118_1, [ UnionOfColumnsListList( deduped_136_1, [ List( deduped_168_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, UnderlyingQuiverAlgebraElement );
                    end ), List( deduped_129_1, function ( logic_new_func_x_2 )
                        return hoisted_18_1;
                    end ) ] ), UnionOfColumnsListList( deduped_137_1, [ deduped_170_1, deduped_161_1 ] ) ] );
    hoisted_28_1 := deduped_150_1;
    hoisted_27_1 := List( deduped_163_1, function ( logic_new_func_x_2 )
            return QuiverVertexAsIdentityPath( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_42_1 := List( deduped_150_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := PathAsAlgebraElement( hoisted_15_1, hoisted_27_1[logic_new_func_x_2] );
            return List( hoisted_28_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return deduped_160_1;
                    fi;
                    return;
                end );
        end );
    hoisted_40_1 := List( deduped_127_1, function ( logic_new_func_x_2 )
            return hoisted_39_1[logic_new_func_x_2];
        end );
    hoisted_41_1 := UnionOfRowsListList( deduped_118_1, [ UnionOfColumnsListList( deduped_136_1, [ List( deduped_168_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                            end );
                    end ), List( deduped_129_1, function ( logic_new_func_x_2 )
                        return hoisted_40_1;
                    end ) ] ), UnionOfColumnsListList( deduped_137_1, [ List( deduped_180_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Range( logic_new_func_x_3 ) ) );
                            end );
                    end ), deduped_121_1 ] ) ] );
    hoisted_37_1 := deduped_127_1;
    hoisted_36_1 := deduped_144_1;
    hoisted_38_1 := UnionOfRowsListList( deduped_118_1, [ UnionOfColumnsListList( deduped_136_1, [ List( deduped_168_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                            end );
                    end ), List( deduped_129_1, function ( logic_new_func_x_2 )
                        local hoisted_1_2;
                        hoisted_1_2 := hoisted_36_1[logic_new_func_x_2];
                        return List( hoisted_37_1, function ( logic_new_func_x_3 )
                                return hoisted_1_2;
                            end );
                    end ) ] ), UnionOfColumnsListList( deduped_137_1, [ List( deduped_180_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return VertexIndex( UnderlyingVertex( Source( logic_new_func_x_3 ) ) );
                            end );
                    end ), deduped_120_1 ] ) ] );
    hoisted_5_1 := List( deduped_163_1, function ( logic_new_func_x_2 )
            return VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) );
        end );
    hoisted_35_1 := List( deduped_150_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_5_1[logic_new_func_x_2];
            return List( hoisted_28_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return hoisted_5_1[logic_new_func_x_3];
                    fi;
                    return;
                end );
        end );
    hoisted_34_1 := List( deduped_150_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_5_1[logic_new_func_x_2];
            return List( hoisted_28_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_32_1 := List( deduped_127_1, function ( logic_new_func_x_2 )
            return true;
        end );
    hoisted_33_1 := UnionOfRowsListList( deduped_118_1, [ UnionOfColumnsListList( deduped_136_1, [ List( deduped_168_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                            end );
                    end ), List( deduped_129_1, function ( logic_new_func_x_2 )
                        return hoisted_32_1;
                    end ) ] ), UnionOfColumnsListList( deduped_137_1, [ List( deduped_180_1, function ( logic_new_func_new_row_2 )
                        return List( logic_new_func_new_row_2, function ( logic_new_func_x_3 )
                                return IsZero( UnderlyingQuiverAlgebraElement( logic_new_func_x_3 ) );
                            end );
                    end ), deduped_124_1 ] ) ] );
    hoisted_30_1 := List( deduped_150_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_8_1[hoisted_5_1[logic_new_func_x_2]];
            return List( hoisted_6_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_9_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_31_1 := List( deduped_150_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_30_1[logic_new_func_x_2];
            return Sum( List( hoisted_6_1, function ( logic_new_func_x_3 )
                      return hoisted_1_2[logic_new_func_x_3];
                  end ) );
        end );
    hoisted_29_1 := List( deduped_150_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := IsZero( PathAsAlgebraElement( hoisted_15_1, hoisted_27_1[logic_new_func_x_2] ) );
            return List( hoisted_28_1, function ( logic_new_func_x_3 )
                    if logic_new_func_x_2 = logic_new_func_x_3 then
                        return hoisted_1_2;
                    else
                        return true;
                    fi;
                    return;
                end );
        end );
    hoisted_25_1 := deduped_114_1;
    hoisted_24_1 := Concatenation( deduped_144_1, deduped_145_1 );
    hoisted_26_1 := List( deduped_150_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_8_1[hoisted_5_1[logic_new_func_x_2]];
            return List( hoisted_25_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2[hoisted_24_1[logic_new_func_x_3]];
                end );
        end );
    hoisted_20_1 := [ 1 .. Length( ObjectList( Range( deduped_181_1 ) ) ) ];
    hoisted_16_1 := deduped_128_1;
    hoisted_14_1 := deduped_143_1;
    hoisted_19_1 := UnionOfColumnsListList( deduped_138_1, [ List( deduped_128_1, function ( logic_new_func_x_2 )
                  local hoisted_1_2;
                  hoisted_1_2 := PathAsAlgebraElement( hoisted_15_1, hoisted_14_1[logic_new_func_x_2] );
                  return List( hoisted_16_1, function ( logic_new_func_x_3 )
                          if logic_new_func_x_2 = logic_new_func_x_3 then
                              return hoisted_1_2;
                          else
                              return deduped_160_1;
                          fi;
                          return;
                      end );
              end ), List( deduped_128_1, function ( logic_new_func_x_2 )
                  return hoisted_18_1;
              end ) ] );
    hoisted_13_1 := deduped_166_1;
    hoisted_21_1 := List( deduped_150_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_13_1[logic_new_func_x_2];
            return List( hoisted_6_1, function ( logic_new_func_x_3 )
                    return Iterated( List( hoisted_20_1, function ( logic_new_func_x_4 )
                              return hoisted_1_2[logic_new_func_x_4] * hoisted_19_1[logic_new_func_x_4][logic_new_func_x_3];
                          end ), function ( alpha_4, beta_4 )
                            return alpha_4 + beta_4;
                        end, hoisted_17_1 );
                end );
        end );
    hoisted_12_1 := deduped_165_1;
    hoisted_10_1 := List( deduped_115_1, function ( logic_new_func_x_2 )
            return hoisted_9_1[logic_new_func_x_2];
        end );
    hoisted_11_1 := List( deduped_150_1, function ( logic_new_func_x_2 )
            return hoisted_10_1;
        end );
    hoisted_7_1 := List( deduped_150_1, function ( logic_new_func_x_2 )
            local hoisted_1_2;
            hoisted_1_2 := hoisted_5_1[logic_new_func_x_2];
            return List( hoisted_6_1, function ( logic_new_func_x_3 )
                    return hoisted_1_2;
                end );
        end );
    hoisted_4_1 := ListWithKeys( deduped_117_1, function ( key_2, logic_new_func_x_2 )
            local hoisted_1_2, hoisted_2_2, hoisted_3_2;
            hoisted_3_2 := hoisted_108_1[logic_new_func_x_2];
            hoisted_2_2 := hoisted_106_1[logic_new_func_x_2];
            hoisted_1_2 := hoisted_105_1[logic_new_func_x_2];
            return ListWithKeys( hoisted_63_1, function ( key_3, logic_new_func_x_3 )
                    return CoefficientsOfPaths( hoisted_12_1[hoisted_1_2[logic_new_func_x_3]][hoisted_2_2[logic_new_func_x_3]], hoisted_3_2[logic_new_func_x_3] );
                end );
        end );
    hoisted_3_1 := ListWithKeys( deduped_116_1, function ( key_2, logic_new_func_x_2 )
            local hoisted_1_2, hoisted_2_2, hoisted_3_2;
            hoisted_3_2 := hoisted_95_1[logic_new_func_x_2];
            hoisted_2_2 := hoisted_93_1[logic_new_func_x_2];
            hoisted_1_2 := hoisted_91_1[logic_new_func_x_2];
            return ListWithKeys( hoisted_63_1, function ( key_3, logic_new_func_x_3 )
                    return CoefficientsOfPaths( hoisted_12_1[hoisted_1_2[logic_new_func_x_3]][hoisted_2_2[logic_new_func_x_3]], hoisted_3_2[logic_new_func_x_3] );
                end );
        end );
    hoisted_2_1 := ListWithKeys( deduped_115_1, function ( key_2, logic_new_func_x_2 )
            local hoisted_1_2, hoisted_2_2, hoisted_3_2;
            hoisted_3_2 := hoisted_58_1[logic_new_func_x_2];
            hoisted_2_2 := hoisted_56_1[logic_new_func_x_2];
            hoisted_1_2 := hoisted_55_1[logic_new_func_x_2];
            return ListWithKeys( hoisted_6_1, function ( key_3, logic_new_func_x_3 )
                    return CoefficientsOfPaths( hoisted_12_1[hoisted_1_2[logic_new_func_x_3]][hoisted_2_2[logic_new_func_x_3]], hoisted_3_2[logic_new_func_x_3] );
                end );
        end );
    hoisted_1_1 := ListWithKeys( deduped_114_1, function ( key_2, logic_new_func_x_2 )
            local hoisted_1_2, hoisted_2_2, hoisted_3_2;
            hoisted_3_2 := hoisted_43_1[logic_new_func_x_2];
            hoisted_2_2 := hoisted_41_1[logic_new_func_x_2];
            hoisted_1_2 := hoisted_38_1[logic_new_func_x_2];
            return ListWithKeys( hoisted_6_1, function ( key_3, logic_new_func_x_3 )
                    return CoefficientsOfPaths( hoisted_12_1[hoisted_1_2[logic_new_func_x_3]][hoisted_2_2[logic_new_func_x_3]], hoisted_3_2[logic_new_func_x_3] );
                end );
        end );
    return IsZero( DecideZeroRows( HomalgMatrixListList( UnionOfColumnsListList( 1, List( deduped_150_1, function ( logic_new_func_x_2 )
                      local hoisted_1_2, hoisted_2_2, hoisted_3_2;
                      hoisted_3_2 := hoisted_21_1[logic_new_func_x_2];
                      hoisted_2_2 := hoisted_11_1[logic_new_func_x_2];
                      hoisted_1_2 := hoisted_7_1[logic_new_func_x_2];
                      return UnionOfColumnsListList( 1, List( hoisted_6_1, function ( logic_new_func_x_3 )
                                local deduped_1_3, deduped_2_3, deduped_3_3;
                                deduped_3_3 := hoisted_2_2[logic_new_func_x_3];
                                deduped_2_3 := hoisted_1_2[logic_new_func_x_3];
                                deduped_1_3 := hoisted_8_1[deduped_2_3][deduped_3_3];
                                if deduped_1_3 = 0 then
                                    return NullMatImmutable( 1, deduped_1_3 );
                                else
                                    return [ CoefficientsOfPaths( hoisted_12_1[deduped_2_3][deduped_3_3], hoisted_3_2[logic_new_func_x_3] ) ];
                                fi;
                                return;
                            end ) );
                  end ) ), 1, deduped_112_1, deduped_173_1 ), HomalgMatrixListList( UnionOfRowsListList( deduped_112_1, Concatenation( List( deduped_150_1, function ( logic_new_func_x_2 )
                        local hoisted_1_2, hoisted_2_2;
                        hoisted_1_2 := hoisted_26_1[logic_new_func_x_2];
                        hoisted_2_2 := Sum( hoisted_25_1, function ( logic_new_func_x_3 )
                                return hoisted_1_2[logic_new_func_x_3];
                            end );
                        return UnionOfColumnsListList( Sum( List( hoisted_25_1, function ( logic_new_func_x_3 )
                                    return hoisted_1_2[logic_new_func_x_3];
                                end ) ), List( hoisted_28_1, function ( logic_new_func_x_3 )
                                  local hoisted_1_3, hoisted_2_3, hoisted_3_3, hoisted_4_3, hoisted_5_3, hoisted_6_3, deduped_7_3, deduped_8_3, deduped_9_3;
                                  deduped_9_3 := hoisted_31_1[logic_new_func_x_3];
                                  if hoisted_29_1[logic_new_func_x_3][logic_new_func_x_2] then
                                      return NullMatImmutable( hoisted_2_2, deduped_9_3 );
                                  else
                                      deduped_8_3 := hoisted_35_1[logic_new_func_x_3][logic_new_func_x_2];
                                      deduped_7_3 := hoisted_34_1[logic_new_func_x_3][logic_new_func_x_2];
                                      hoisted_6_3 := [ 1 .. hoisted_8_1[deduped_7_3][deduped_8_3] ];
                                      hoisted_5_3 := deduped_7_3;
                                      hoisted_4_3 := hoisted_44_1[deduped_8_3];
                                      hoisted_2_3 := hoisted_30_1[logic_new_func_x_3];
                                      hoisted_3_3 := Sum( hoisted_6_1, function ( logic_new_func_x_4 )
                                              return hoisted_2_3[logic_new_func_x_4];
                                          end );
                                      hoisted_1_3 := CoefficientsOfPaths( hoisted_12_1[deduped_7_3][deduped_8_3], hoisted_42_1[logic_new_func_x_3][logic_new_func_x_2] );
                                      return UnionOfRowsListList( deduped_9_3, ListWithKeys( hoisted_25_1, function ( key_4, logic_new_func_x_4 )
                                                local hoisted_1_4, hoisted_2_4, hoisted_3_4, hoisted_4_4, hoisted_5_4, deduped_6_4;
                                                deduped_6_4 := hoisted_1_2[logic_new_func_x_4];
                                                if deduped_6_4 = 0 then
                                                    return NullMatImmutable( deduped_6_4, hoisted_3_3 );
                                                else
                                                    hoisted_5_4 := hoisted_1_1[key_4];
                                                    hoisted_4_4 := hoisted_41_1[logic_new_func_x_4];
                                                    hoisted_3_4 := hoisted_38_1[logic_new_func_x_4];
                                                    hoisted_2_4 := deduped_6_4;
                                                    hoisted_1_4 := hoisted_33_1[logic_new_func_x_4];
                                                    return UnionOfColumnsListList( deduped_6_4, ListWithKeys( hoisted_6_1, function ( key_5, logic_new_func_x_5 )
                                                              local hoisted_1_5, hoisted_2_5, hoisted_3_5, deduped_4_5, deduped_5_5, deduped_6_5;
                                                              deduped_4_5 := hoisted_2_3[logic_new_func_x_5];
                                                              if (hoisted_1_4[logic_new_func_x_5] or deduped_4_5 = 0) then
                                                                  return NullMatImmutable( hoisted_2_4, deduped_4_5 );
                                                              else
                                                                  deduped_6_5 := hoisted_4_4[logic_new_func_x_5];
                                                                  deduped_5_5 := hoisted_3_4[logic_new_func_x_5];
                                                                  hoisted_3_5 := [ 1 .. hoisted_8_1[deduped_5_5][deduped_6_5] ];
                                                                  hoisted_2_5 := hoisted_4_3[deduped_5_5][hoisted_5_3][deduped_6_5];
                                                                  hoisted_1_5 := hoisted_5_4[key_5];
                                                                  return Sum( hoisted_6_3, function ( p_6 )
                                                                          local hoisted_1_6, hoisted_2_6;
                                                                          hoisted_2_6 := hoisted_2_5[p_6];
                                                                          hoisted_1_6 := hoisted_1_3[p_6];
                                                                          return Sum( hoisted_3_5, function ( q_7 )
                                                                                  return hoisted_1_6 * hoisted_1_5[q_7] * hoisted_2_6[q_7];
                                                                              end );
                                                                      end );
                                                              fi;
                                                              return;
                                                          end ) );
                                                fi;
                                                return;
                                            end ) );
                                  fi;
                                  return;
                              end ) );
                    end ), List( deduped_126_1, function ( logic_new_func_x_2 )
                        local hoisted_1_2, hoisted_2_2;
                        hoisted_1_2 := hoisted_46_1[logic_new_func_x_2];
                        hoisted_2_2 := Sum( hoisted_6_1, function ( logic_new_func_x_3 )
                                return hoisted_1_2[logic_new_func_x_3];
                            end );
                        return UnionOfColumnsListList( Sum( List( hoisted_6_1, function ( logic_new_func_x_3 )
                                    return hoisted_1_2[logic_new_func_x_3];
                                end ) ), List( hoisted_59_1, function ( logic_new_func_x_3 )
                                  local hoisted_1_3, hoisted_2_3, hoisted_3_3, hoisted_4_3, hoisted_5_3, hoisted_6_3, deduped_7_3, deduped_8_3, deduped_9_3;
                                  deduped_9_3 := hoisted_50_1[logic_new_func_x_3];
                                  if hoisted_47_1[logic_new_func_x_3][logic_new_func_x_2] then
                                      return NullMatImmutable( hoisted_2_2, deduped_9_3 );
                                  else
                                      deduped_8_3 := hoisted_54_1[logic_new_func_x_3][logic_new_func_x_2];
                                      deduped_7_3 := hoisted_53_1[logic_new_func_x_3][logic_new_func_x_2];
                                      hoisted_6_3 := [ 1 .. hoisted_8_1[deduped_7_3][deduped_8_3] ];
                                      hoisted_5_3 := deduped_7_3;
                                      hoisted_4_3 := hoisted_44_1[deduped_8_3];
                                      hoisted_2_3 := hoisted_49_1[logic_new_func_x_3];
                                      hoisted_3_3 := Sum( hoisted_6_1, function ( logic_new_func_x_4 )
                                              return hoisted_2_3[logic_new_func_x_4];
                                          end );
                                      hoisted_1_3 := CoefficientsOfPaths( hoisted_12_1[deduped_7_3][deduped_8_3], hoisted_57_1[logic_new_func_x_3][logic_new_func_x_2] );
                                      return UnionOfRowsListList( deduped_9_3, ListWithKeys( hoisted_6_1, function ( key_4, logic_new_func_x_4 )
                                                local hoisted_1_4, hoisted_2_4, hoisted_3_4, hoisted_4_4, hoisted_5_4, deduped_6_4;
                                                deduped_6_4 := hoisted_1_2[logic_new_func_x_4];
                                                if deduped_6_4 = 0 then
                                                    return NullMatImmutable( deduped_6_4, hoisted_3_3 );
                                                else
                                                    hoisted_5_4 := hoisted_2_1[key_4];
                                                    hoisted_4_4 := hoisted_56_1[logic_new_func_x_4];
                                                    hoisted_3_4 := hoisted_55_1[logic_new_func_x_4];
                                                    hoisted_2_4 := deduped_6_4;
                                                    hoisted_1_4 := hoisted_52_1[logic_new_func_x_4];
                                                    return UnionOfColumnsListList( deduped_6_4, ListWithKeys( hoisted_6_1, function ( key_5, logic_new_func_x_5 )
                                                              local hoisted_1_5, hoisted_2_5, hoisted_3_5, deduped_4_5, deduped_5_5, deduped_6_5;
                                                              deduped_4_5 := hoisted_2_3[logic_new_func_x_5];
                                                              if (hoisted_1_4[logic_new_func_x_5] or deduped_4_5 = 0) then
                                                                  return NullMatImmutable( hoisted_2_4, deduped_4_5 );
                                                              else
                                                                  deduped_6_5 := hoisted_4_4[logic_new_func_x_5];
                                                                  deduped_5_5 := hoisted_3_4[logic_new_func_x_5];
                                                                  hoisted_3_5 := [ 1 .. hoisted_8_1[deduped_5_5][deduped_6_5] ];
                                                                  hoisted_2_5 := hoisted_4_3[deduped_5_5][hoisted_5_3][deduped_6_5];
                                                                  hoisted_1_5 := hoisted_5_4[key_5];
                                                                  return Sum( hoisted_6_3, function ( p_6 )
                                                                          local hoisted_1_6, hoisted_2_6;
                                                                          hoisted_2_6 := hoisted_2_5[p_6];
                                                                          hoisted_1_6 := hoisted_1_3[p_6];
                                                                          return Sum( hoisted_3_5, function ( q_7 )
                                                                                  return hoisted_1_6 * hoisted_1_5[q_7] * hoisted_2_6[q_7];
                                                                              end );
                                                                      end );
                                                              fi;
                                                              return;
                                                          end ) );
                                                fi;
                                                return;
                                            end ) );
                                  fi;
                                  return;
                              end ) );
                    end ) ) ), Sum( [ Sum( Concatenation( List( deduped_163_1, function ( logic_new_func_x_2 )
                              local hoisted_1_2;
                              hoisted_1_2 := hoisted_8_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                              return Concatenation( List( hoisted_60_1, function ( logic_new_func_x_3 )
                                        return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                    end ), List( hoisted_61_1, function ( logic_new_func_x_3 )
                                        return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                    end ) );
                          end ) ) ), Sum( Concatenation( List( deduped_152_1, function ( logic_new_func_x_2 )
                              local hoisted_1_2;
                              hoisted_1_2 := hoisted_8_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                              return Concatenation( List( hoisted_22_1, function ( logic_new_func_x_3 )
                                        return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                    end ), List( hoisted_23_1, function ( logic_new_func_x_3 )
                                        return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                    end ) );
                          end ) ) ) ] ), deduped_112_1, deduped_173_1 ) ) ) and IsZero( DecideZeroRows( HomalgMatrixListList( UnionOfColumnsListList( 1, List( deduped_151_1, function ( logic_new_func_x_2 )
                      local hoisted_1_2, hoisted_2_2, hoisted_3_2;
                      hoisted_3_2 := hoisted_74_1[logic_new_func_x_2];
                      hoisted_2_2 := hoisted_67_1[logic_new_func_x_2];
                      hoisted_1_2 := hoisted_64_1[logic_new_func_x_2];
                      return UnionOfColumnsListList( 1, List( hoisted_63_1, function ( logic_new_func_x_3 )
                                local deduped_1_3, deduped_2_3, deduped_3_3;
                                deduped_3_3 := hoisted_2_2[logic_new_func_x_3];
                                deduped_2_3 := hoisted_1_2[logic_new_func_x_3];
                                deduped_1_3 := hoisted_8_1[deduped_2_3][deduped_3_3];
                                if deduped_1_3 = 0 then
                                    return NullMatImmutable( 1, deduped_1_3 );
                                else
                                    return [ CoefficientsOfPaths( hoisted_12_1[deduped_2_3][deduped_3_3], hoisted_3_2[logic_new_func_x_3] ) ];
                                fi;
                                return;
                            end ) );
                  end ) ), 1, deduped_113_1, deduped_173_1 ), HomalgMatrixListList( UnionOfRowsListList( deduped_113_1, Concatenation( List( deduped_151_1, function ( logic_new_func_x_2 )
                        local hoisted_1_2, hoisted_2_2;
                        hoisted_1_2 := hoisted_79_1[logic_new_func_x_2];
                        hoisted_2_2 := Sum( hoisted_78_1, function ( logic_new_func_x_3 )
                                return hoisted_1_2[logic_new_func_x_3];
                            end );
                        return UnionOfColumnsListList( Sum( List( hoisted_78_1, function ( logic_new_func_x_3 )
                                    return hoisted_1_2[logic_new_func_x_3];
                                end ) ), List( hoisted_81_1, function ( logic_new_func_x_3 )
                                  local hoisted_1_3, hoisted_2_3, hoisted_3_3, hoisted_4_3, hoisted_5_3, hoisted_6_3, deduped_7_3, deduped_8_3, deduped_9_3;
                                  deduped_9_3 := hoisted_84_1[logic_new_func_x_3];
                                  if hoisted_82_1[logic_new_func_x_3][logic_new_func_x_2] then
                                      return NullMatImmutable( hoisted_2_2, deduped_9_3 );
                                  else
                                      deduped_8_3 := hoisted_88_1[logic_new_func_x_3][logic_new_func_x_2];
                                      deduped_7_3 := hoisted_87_1[logic_new_func_x_3][logic_new_func_x_2];
                                      hoisted_6_3 := [ 1 .. hoisted_8_1[deduped_7_3][deduped_8_3] ];
                                      hoisted_5_3 := deduped_7_3;
                                      hoisted_4_3 := hoisted_44_1[deduped_8_3];
                                      hoisted_2_3 := hoisted_83_1[logic_new_func_x_3];
                                      hoisted_3_3 := Sum( hoisted_63_1, function ( logic_new_func_x_4 )
                                              return hoisted_2_3[logic_new_func_x_4];
                                          end );
                                      hoisted_1_3 := CoefficientsOfPaths( hoisted_12_1[deduped_7_3][deduped_8_3], hoisted_94_1[logic_new_func_x_3][logic_new_func_x_2] );
                                      return UnionOfRowsListList( deduped_9_3, ListWithKeys( hoisted_78_1, function ( key_4, logic_new_func_x_4 )
                                                local hoisted_1_4, hoisted_2_4, hoisted_3_4, hoisted_4_4, hoisted_5_4, deduped_6_4;
                                                deduped_6_4 := hoisted_1_2[logic_new_func_x_4];
                                                if deduped_6_4 = 0 then
                                                    return NullMatImmutable( deduped_6_4, hoisted_3_3 );
                                                else
                                                    hoisted_5_4 := hoisted_3_1[key_4];
                                                    hoisted_4_4 := hoisted_93_1[logic_new_func_x_4];
                                                    hoisted_3_4 := hoisted_91_1[logic_new_func_x_4];
                                                    hoisted_2_4 := deduped_6_4;
                                                    hoisted_1_4 := hoisted_86_1[logic_new_func_x_4];
                                                    return UnionOfColumnsListList( deduped_6_4, ListWithKeys( hoisted_63_1, function ( key_5, logic_new_func_x_5 )
                                                              local hoisted_1_5, hoisted_2_5, hoisted_3_5, deduped_4_5, deduped_5_5, deduped_6_5;
                                                              deduped_4_5 := hoisted_2_3[logic_new_func_x_5];
                                                              if (hoisted_1_4[logic_new_func_x_5] or deduped_4_5 = 0) then
                                                                  return NullMatImmutable( hoisted_2_4, deduped_4_5 );
                                                              else
                                                                  deduped_6_5 := hoisted_4_4[logic_new_func_x_5];
                                                                  deduped_5_5 := hoisted_3_4[logic_new_func_x_5];
                                                                  hoisted_3_5 := [ 1 .. hoisted_8_1[deduped_5_5][deduped_6_5] ];
                                                                  hoisted_2_5 := hoisted_4_3[deduped_5_5][hoisted_5_3][deduped_6_5];
                                                                  hoisted_1_5 := hoisted_5_4[key_5];
                                                                  return Sum( hoisted_6_3, function ( p_6 )
                                                                          local hoisted_1_6, hoisted_2_6;
                                                                          hoisted_2_6 := hoisted_2_5[p_6];
                                                                          hoisted_1_6 := hoisted_1_3[p_6];
                                                                          return Sum( hoisted_3_5, function ( q_7 )
                                                                                  return hoisted_1_6 * hoisted_1_5[q_7] * hoisted_2_6[q_7];
                                                                              end );
                                                                      end );
                                                              fi;
                                                              return;
                                                          end ) );
                                                fi;
                                                return;
                                            end ) );
                                  fi;
                                  return;
                              end ) );
                    end ), List( deduped_127_1, function ( logic_new_func_x_2 )
                        local hoisted_1_2, hoisted_2_2;
                        hoisted_1_2 := hoisted_96_1[logic_new_func_x_2];
                        hoisted_2_2 := Sum( hoisted_63_1, function ( logic_new_func_x_3 )
                                return hoisted_1_2[logic_new_func_x_3];
                            end );
                        return UnionOfColumnsListList( Sum( List( hoisted_63_1, function ( logic_new_func_x_3 )
                                    return hoisted_1_2[logic_new_func_x_3];
                                end ) ), List( hoisted_109_1, function ( logic_new_func_x_3 )
                                  local hoisted_1_3, hoisted_2_3, hoisted_3_3, hoisted_4_3, hoisted_5_3, hoisted_6_3, deduped_7_3, deduped_8_3, deduped_9_3;
                                  deduped_9_3 := hoisted_100_1[logic_new_func_x_3];
                                  if hoisted_97_1[logic_new_func_x_3][logic_new_func_x_2] then
                                      return NullMatImmutable( hoisted_2_2, deduped_9_3 );
                                  else
                                      deduped_8_3 := hoisted_104_1[logic_new_func_x_3][logic_new_func_x_2];
                                      deduped_7_3 := hoisted_103_1[logic_new_func_x_3][logic_new_func_x_2];
                                      hoisted_6_3 := [ 1 .. hoisted_8_1[deduped_7_3][deduped_8_3] ];
                                      hoisted_5_3 := deduped_7_3;
                                      hoisted_4_3 := hoisted_44_1[deduped_8_3];
                                      hoisted_2_3 := hoisted_99_1[logic_new_func_x_3];
                                      hoisted_3_3 := Sum( hoisted_63_1, function ( logic_new_func_x_4 )
                                              return hoisted_2_3[logic_new_func_x_4];
                                          end );
                                      hoisted_1_3 := CoefficientsOfPaths( hoisted_12_1[deduped_7_3][deduped_8_3], hoisted_107_1[logic_new_func_x_3][logic_new_func_x_2] );
                                      return UnionOfRowsListList( deduped_9_3, ListWithKeys( hoisted_63_1, function ( key_4, logic_new_func_x_4 )
                                                local hoisted_1_4, hoisted_2_4, hoisted_3_4, hoisted_4_4, hoisted_5_4, deduped_6_4;
                                                deduped_6_4 := hoisted_1_2[logic_new_func_x_4];
                                                if deduped_6_4 = 0 then
                                                    return NullMatImmutable( deduped_6_4, hoisted_3_3 );
                                                else
                                                    hoisted_5_4 := hoisted_4_1[key_4];
                                                    hoisted_4_4 := hoisted_106_1[logic_new_func_x_4];
                                                    hoisted_3_4 := hoisted_105_1[logic_new_func_x_4];
                                                    hoisted_2_4 := deduped_6_4;
                                                    hoisted_1_4 := hoisted_102_1[logic_new_func_x_4];
                                                    return UnionOfColumnsListList( deduped_6_4, ListWithKeys( hoisted_63_1, function ( key_5, logic_new_func_x_5 )
                                                              local hoisted_1_5, hoisted_2_5, hoisted_3_5, deduped_4_5, deduped_5_5, deduped_6_5;
                                                              deduped_4_5 := hoisted_2_3[logic_new_func_x_5];
                                                              if (hoisted_1_4[logic_new_func_x_5] or deduped_4_5 = 0) then
                                                                  return NullMatImmutable( hoisted_2_4, deduped_4_5 );
                                                              else
                                                                  deduped_6_5 := hoisted_4_4[logic_new_func_x_5];
                                                                  deduped_5_5 := hoisted_3_4[logic_new_func_x_5];
                                                                  hoisted_3_5 := [ 1 .. hoisted_8_1[deduped_5_5][deduped_6_5] ];
                                                                  hoisted_2_5 := hoisted_4_3[deduped_5_5][hoisted_5_3][deduped_6_5];
                                                                  hoisted_1_5 := hoisted_5_4[key_5];
                                                                  return Sum( hoisted_6_3, function ( p_6 )
                                                                          local hoisted_1_6, hoisted_2_6;
                                                                          hoisted_2_6 := hoisted_2_5[p_6];
                                                                          hoisted_1_6 := hoisted_1_3[p_6];
                                                                          return Sum( hoisted_3_5, function ( q_7 )
                                                                                  return hoisted_1_6 * hoisted_1_5[q_7] * hoisted_2_6[q_7];
                                                                              end );
                                                                      end );
                                                              fi;
                                                              return;
                                                          end ) );
                                                fi;
                                                return;
                                            end ) );
                                  fi;
                                  return;
                              end ) );
                    end ) ) ), Sum( [ Sum( Concatenation( List( deduped_164_1, function ( logic_new_func_x_2 )
                              local hoisted_1_2;
                              hoisted_1_2 := hoisted_8_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                              return Concatenation( List( hoisted_110_1, function ( logic_new_func_x_3 )
                                        return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                    end ), List( hoisted_111_1, function ( logic_new_func_x_3 )
                                        return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                    end ) );
                          end ) ) ), Sum( Concatenation( List( deduped_153_1, function ( logic_new_func_x_2 )
                              local hoisted_1_2;
                              hoisted_1_2 := hoisted_8_1[VertexIndex( UnderlyingVertex( logic_new_func_x_2 ) )];
                              return Concatenation( List( hoisted_75_1, function ( logic_new_func_x_3 )
                                        return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                    end ), List( hoisted_76_1, function ( logic_new_func_x_3 )
                                        return hoisted_1_2[VertexIndex( UnderlyingVertex( logic_new_func_x_3 ) )];
                                    end ) );
                          end ) ) ) ] ), deduped_113_1, deduped_173_1 ) ) );
end
########
        
    , 603 : IsPrecompiledDerivation := true );
    
end );

BindGlobal( "AdelmanCategoryOfAdditiveClosureOfAlgebroidOfFiniteDimensionalQuiverAlgebraOfRightQuiverOverFieldPrecompiled", function ( Rq )
  local category_constructor, cat;
    
    category_constructor :=
        
        
        function ( Rq )
    return AdelmanCategory( AdditiveClosure( Algebroid( Rq, false : FinalizeCategory := true ) : FinalizeCategory := true ) );
end;
        
        
    
    cat := category_constructor( Rq : FinalizeCategory := false, no_precompiled_code := true );
    
    ADD_FUNCTIONS_FOR_AdelmanCategoryOfAdditiveClosureOfAlgebroidOfFiniteDimensionalQuiverAlgebraOfRightQuiverOverFieldPrecompiled( cat );
    
    Finalize( cat );
    
    return cat;
    
end );
