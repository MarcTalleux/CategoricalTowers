# SPDX-License-Identifier: GPL-2.0-or-later
# Algebroids: Algebroids and bialgebroids as preadditive categories generated by enhanced quivers
#
# Implementations
#
CapJitAddLogicTemplate(
    rec(
        variable_names := [ "ring", "nr_rows1", "list", "condA", "condB", "nr_rows2", "nr_cols", "value" ],
        src_template := """
            return UnionOfColumns( ring, nr_rows1, List( list, function( l )
                if condA or condB then
                    return HomalgZeroMatrix( nr_rows2, nr_cols, ring );
                else
                    return value;
                fi;
            end ) );
        """,
        dst_template := """
            if condA then
                return HomalgZeroMatrix( nr_rows1, Sum( list, l -> nr_cols ), ring );
            else
                return UnionOfColumns( ring, nr_rows1, List( list, function( l )
                    if condB then
                        return HomalgZeroMatrix( nr_rows2, nr_cols, ring );
                    else
                        return value;
                    fi;
                end ) );
            fi;
        """,
        returns_value := false,
        needed_packages := [ [ "MatricesForHomalg", ">= 2020.05.19" ] ],
    )
);

CapJitAddLogicTemplate(
    rec(
        variable_names := [ "ring", "nr_cols1", "list", "condA", "condB", "nr_rows", "nr_cols2", "value" ],
        src_template := """
            return UnionOfRows( ring, nr_cols1, List( list, function( l )
                if condA or condB then
                    return HomalgZeroMatrix( nr_rows, nr_cols2, ring );
                else
                    return value;
                fi;
            end ) );
        """,
        dst_template := """
            if condA then
                return HomalgZeroMatrix( Sum( list, l -> nr_rows ), nr_cols1, ring );
            else
                return UnionOfRows( ring, nr_cols1, List( list, function( l )
                    if condB then
                        return HomalgZeroMatrix( nr_rows, nr_cols2, ring );
                    else
                        return value;
                    fi;
                end ) );
            fi;
        """,
        returns_value := false,
        needed_packages := [ [ "MatricesForHomalg", ">= 2020.05.19" ] ],
    )
);
